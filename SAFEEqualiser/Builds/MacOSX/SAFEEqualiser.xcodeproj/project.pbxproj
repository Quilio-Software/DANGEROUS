// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		40D4497885B9CD8E1E5889AF /* SAFEEqualiser - All */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 762A174DB5CA736D34F9ED6C;
			buildPhases = (
				AC987194687F9331F158DA2E,
			);
			dependencies = (
				F40796E7D707CF152E59D7F3,
				F042590161439111602889CB,
				70C7A1A51FBBCB9972240775,
				076EC2B692F752A495639D8B,
				4240E6B950EAFB66168A1492,
			);
			name = "SAFEEqualiser - All";
			productName = SAFEEqualiser;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		037232E151345D0DC9F8A178 /* CoreAudio.framework */ = {isa = PBXBuildFile; fileRef = 89D55A6AE60554E0AA12624F; };
		05B1FB926C1CD47097F46217 /* VST */ = {isa = PBXBuildFile; fileRef = E143F016AB520080119066F3; };
		064453D1C96DA5FCD961E098 /* AU */ = {isa = PBXBuildFile; fileRef = 0C8928B3A574337883F2A358; };
		09A91AB65C141DEDD2801F0A /* Foundation.framework */ = {isa = PBXBuildFile; fileRef = 0DBF9238441A8F7E5772EDFB; };
		09CAE28964193F7A101E7606 /* include_juce_audio_devices.mm */ = {isa = PBXBuildFile; fileRef = 6A9AB47C7382736F511DFBD8; };
		0E1748E2D69350633388A0EA /* PluginEditor.cpp */ = {isa = PBXBuildFile; fileRef = 4B40CFCF7EF6F08EBFC4D9F7; };
		13652EDA3D8D4949A238E56E /* Carbon.framework */ = {isa = PBXBuildFile; fileRef = C21734D6566FCC85805DAA75; };
		168129ECAC49FB8A4CA2068F /* include_juce_audio_plugin_client_RTAS_2.cpp */ = {isa = PBXBuildFile; fileRef = 733B03FAA6625435175AD287; };
		24207C3417454646EF98C365 /* include_juce_audio_plugin_client_Standalone.cpp */ = {isa = PBXBuildFile; fileRef = F5B87B0DDC124EDAB45435F9; };
		2D3B188DBDACF598EA66464F /* include_juce_gui_basics.mm */ = {isa = PBXBuildFile; fileRef = FD1D5D5A36CA10B3EB12A46F; };
		39A31DD73DC71BC59F3C8244 /* include_juce_cryptography.mm */ = {isa = PBXBuildFile; fileRef = 0B090D843621554ABC1B45D9; };
		3CA0B73C5B1A84946FECE9F3 /* include_juce_audio_basics.mm */ = {isa = PBXBuildFile; fileRef = B46FA2459EB1811ADEB7C286; };
		48241548CD06CBC64A967B03 /* include_juce_audio_processors.mm */ = {isa = PBXBuildFile; fileRef = E7F8E07EDAED04E410358670; };
		6F6F1F9EB1B60AD178259C75 /* QuartzCore.framework */ = {isa = PBXBuildFile; fileRef = 64B44BB7B3AAFE7A6527AB11; };
		781585B98E15F9D809F209E8 /* include_juce_audio_formats.mm */ = {isa = PBXBuildFile; fileRef = 0C9FE4EB57BC9C4004EF6F41; };
		7B211B3BC750D7B990A102C1 /* include_juce_audio_plugin_client_RTAS_utils.mm */ = {isa = PBXBuildFile; fileRef = 05BAE7C7DE50B4ADDDD4CD25; };
		821699B91C8AC6013954A9A5 /* OpenGL.framework */ = {isa = PBXBuildFile; fileRef = 8036AA9D0126B373010EDEA6; };
		84CD581131E89AFF0F11F4CA /* Shared Code */ = {isa = PBXBuildFile; fileRef = E1D63C4761B0BBB676D5BEB3; };
		877248A699591145BF7AC8EC /* CoreAudioKit.framework */ = {isa = PBXBuildFile; fileRef = FB21743174B9630BD039F5F3; };
		8CF8D6393B989DECFEA303AF /* DiscRecording.framework */ = {isa = PBXBuildFile; fileRef = 0B6D8C840A3CF024C0789CA4; };
		8FCF909A3C4753CD6E18E557 /* include_juce_audio_plugin_client_RTAS_4.cpp */ = {isa = PBXBuildFile; fileRef = F8BC860763B0196C20495E13; };
		909A757FF41A6AB074FE87CE /* include_juce_audio_plugin_client_AU_1.mm */ = {isa = PBXBuildFile; fileRef = D1B18D6019F183399BCF0FBF; };
		942F5D420498169F8904D8DC /* include_juce_audio_plugin_client_VST_utils.mm */ = {isa = PBXBuildFile; fileRef = A14ACF4809FF4BF9BA5E3D4C; };
		95F5CAD168B6516D04493C37 /* include_juce_audio_plugin_client_AU_2.mm */ = {isa = PBXBuildFile; fileRef = E2A7EA42A2D04F8AA9A0A919; };
		9CDB24247168F75098D6E66E /* AudioUnit.framework */ = {isa = PBXBuildFile; fileRef = 202CBA1F0C5B0F9F83549BF4; };
		9ECF597D8C6AF4793D02850F /* include_juce_graphics.mm */ = {isa = PBXBuildFile; fileRef = 7AABBCB08433DBC4D64BAE13; };
		9F0AD79CB51D03DE11E73AF8 /* include_juce_audio_plugin_client_RTAS_1.cpp */ = {isa = PBXBuildFile; fileRef = 03D3B58695F353AAD02755AC; };
		9FC9146E497162CB65B7C1D7 /* Accelerate.framework */ = {isa = PBXBuildFile; fileRef = 7A2CAB64D199F6259EB56C54; };
		A7C38B641F73D03559E78DC3 /* VST3 */ = {isa = PBXBuildFile; fileRef = 2C49A11A6C5BAC5E4AA4D3FD; };
		A8727F585F7FDA0459509F86 /* include_juce_gui_extra.mm */ = {isa = PBXBuildFile; fileRef = 513595F7F94804AB5BE2AB37; };
		ACE47A3F89D8B23F01740306 /* include_juce_audio_plugin_client_utils.cpp */ = {isa = PBXBuildFile; fileRef = 2B429895FAD7A9B44BE7EC2E; };
		B15EEBE4ECB2BE6827E88AF9 /* include_juce_core.mm */ = {isa = PBXBuildFile; fileRef = 03F9E32DF5DF29382FEC60E7; };
		B5CFF3F3D2C462A33763A751 /* CoreMIDI.framework */ = {isa = PBXBuildFile; fileRef = 07A11304D1715CC51B076D02; };
		CA33440D30E38195579D1056 /* include_juce_opengl.mm */ = {isa = PBXBuildFile; fileRef = 8D33B9FA45A7131A88CD828D; };
		CC598B9AD8BA4654545C5F25 /* include_juce_audio_plugin_client_RTAS_3.cpp */ = {isa = PBXBuildFile; fileRef = 4E45C21D7942EC3B07668B80; };
		CD462C54C1A5BB10E716755D /* include_juce_audio_plugin_client_VST2.cpp */ = {isa = PBXBuildFile; fileRef = C56DA2EE4B75D3D4BC2DF04E; };
		CEDF63AEABE1DC1996C3E592 /* PluginProcessor.cpp */ = {isa = PBXBuildFile; fileRef = 501C3C562CF40DC5DE649EFA; };
		D62F197D5A3E3A99430A535D /* include_juce_audio_plugin_client_AU.r */ = {isa = PBXBuildFile; fileRef = 71426CD925766C02C9D3E61D; };
		D9B4367468C28AA036D6686D /* IOKit.framework */ = {isa = PBXBuildFile; fileRef = 55D910CF16E90DBEC0D42343; };
		DA946E7246E90E61AFDCB3F8 /* RecentFilesMenuTemplate.nib */ = {isa = PBXBuildFile; fileRef = A9381F8949DC2E1A85D5D4FB; };
		DCED0B0DF00125B3A24A1747 /* Standalone Plugin */ = {isa = PBXBuildFile; fileRef = 444CF130885C7B88E7C2544F; };
		DFB3FB28744C57CBB0652F3F /* include_juce_events.mm */ = {isa = PBXBuildFile; fileRef = 8F34D50F42BA2BF3321BC4C6; };
		EB3E4DBB3B48B34A7943042E /* include_juce_audio_plugin_client_VST3.cpp */ = {isa = PBXBuildFile; fileRef = 1813F2F355D9601EA59E2953; };
		EF5C1AD57581641EA6A884E7 /* include_juce_audio_utils.mm */ = {isa = PBXBuildFile; fileRef = 5F9E6B05F1FE67EF0F0839EF; };
		EFDAA4E93A8F91C806776059 /* AudioToolbox.framework */ = {isa = PBXBuildFile; fileRef = 5B75B2C310F074F5159C8A07; };
		F51B9563017380E19B074ABB /* WebKit.framework */ = {isa = PBXBuildFile; fileRef = 2FB8BF30107AA2AA3146AC7F; };
		F5EB399AE5ABCEE21DF98949 /* include_juce_data_structures.mm */ = {isa = PBXBuildFile; fileRef = A13D82FE00FBEF6220D8A2CD; };
		FD1615003A116D03FBEE23B2 /* Cocoa.framework */ = {isa = PBXBuildFile; fileRef = BDD556FCA5A669152B49FB41; };
/* End PBXBuildFile section */

/* Begin PBXFileReference section */
		03D3B58695F353AAD02755AC /* include_juce_audio_plugin_client_RTAS_1.cpp */ /* include_juce_audio_plugin_client_RTAS_1.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; name = include_juce_audio_plugin_client_RTAS_1.cpp; path = ../../JuceLibraryCode/include_juce_audio_plugin_client_RTAS_1.cpp; sourceTree = SOURCE_ROOT; };
		03F9E32DF5DF29382FEC60E7 /* include_juce_core.mm */ /* include_juce_core.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_core.mm; path = ../../JuceLibraryCode/include_juce_core.mm; sourceTree = SOURCE_ROOT; };
		05BAE7C7DE50B4ADDDD4CD25 /* include_juce_audio_plugin_client_RTAS_utils.mm */ /* include_juce_audio_plugin_client_RTAS_utils.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_audio_plugin_client_RTAS_utils.mm; path = ../../JuceLibraryCode/include_juce_audio_plugin_client_RTAS_utils.mm; sourceTree = SOURCE_ROOT; };
		07A11304D1715CC51B076D02 /* CoreMIDI.framework */ /* CoreMIDI.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreMIDI.framework; path = System/Library/Frameworks/CoreMIDI.framework; sourceTree = SDKROOT; };
		0B090D843621554ABC1B45D9 /* include_juce_cryptography.mm */ /* include_juce_cryptography.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_cryptography.mm; path = ../../JuceLibraryCode/include_juce_cryptography.mm; sourceTree = SOURCE_ROOT; };
		0B6D8C840A3CF024C0789CA4 /* DiscRecording.framework */ /* DiscRecording.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = DiscRecording.framework; path = System/Library/Frameworks/DiscRecording.framework; sourceTree = SDKROOT; };
		0C8928B3A574337883F2A358 /* AU */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = SAFEEqualiser.component; sourceTree = BUILT_PRODUCTS_DIR; };
		0C9FE4EB57BC9C4004EF6F41 /* include_juce_audio_formats.mm */ /* include_juce_audio_formats.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_audio_formats.mm; path = ../../JuceLibraryCode/include_juce_audio_formats.mm; sourceTree = SOURCE_ROOT; };
		0DBF9238441A8F7E5772EDFB /* Foundation.framework */ /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
		1813F2F355D9601EA59E2953 /* include_juce_audio_plugin_client_VST3.cpp */ /* include_juce_audio_plugin_client_VST3.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; name = include_juce_audio_plugin_client_VST3.cpp; path = ../../JuceLibraryCode/include_juce_audio_plugin_client_VST3.cpp; sourceTree = SOURCE_ROOT; };
		1B9914C5C1F799A370071618 /* juce_audio_plugin_client */ /* juce_audio_plugin_client */ = {isa = PBXFileReference; lastKnownFileType = folder; name = juce_audio_plugin_client; path = "~/JUCE/modules/juce_audio_plugin_client"; sourceTree = "<absolute>"; };
		202CBA1F0C5B0F9F83549BF4 /* AudioUnit.framework */ /* AudioUnit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = AudioUnit.framework; path = System/Library/Frameworks/AudioUnit.framework; sourceTree = SDKROOT; };
		289F9D3E94831345AB513778 /* juce_audio_formats */ /* juce_audio_formats */ = {isa = PBXFileReference; lastKnownFileType = folder; name = juce_audio_formats; path = "~/JUCE/modules/juce_audio_formats"; sourceTree = "<absolute>"; };
		2B429895FAD7A9B44BE7EC2E /* include_juce_audio_plugin_client_utils.cpp */ /* include_juce_audio_plugin_client_utils.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; name = include_juce_audio_plugin_client_utils.cpp; path = ../../JuceLibraryCode/include_juce_audio_plugin_client_utils.cpp; sourceTree = SOURCE_ROOT; };
		2C49A11A6C5BAC5E4AA4D3FD /* VST3 */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = SAFEEqualiser.vst3; sourceTree = BUILT_PRODUCTS_DIR; };
		2FB8BF30107AA2AA3146AC7F /* WebKit.framework */ /* WebKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = WebKit.framework; path = System/Library/Frameworks/WebKit.framework; sourceTree = SDKROOT; };
		33380BFE04830D3875BD2795 /* juce_gui_basics */ /* juce_gui_basics */ = {isa = PBXFileReference; lastKnownFileType = folder; name = juce_gui_basics; path = "~/JUCE/modules/juce_gui_basics"; sourceTree = "<absolute>"; };
		3D6CAAF68C61CC1A3BF27398 /* Info-VST3.plist */ /* Info-VST3.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "Info-VST3.plist"; path = "Info-VST3.plist"; sourceTree = SOURCE_ROOT; };
		3FBBB29D2F9351F30C4E70DE /* PluginProcessor.h */ /* PluginProcessor.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = PluginProcessor.h; path = ../../Source/PluginProcessor.h; sourceTree = SOURCE_ROOT; };
		417ADB035D893E52E0621895 /* include_juce_audio_plugin_client_RTAS.r */ /* include_juce_audio_plugin_client_RTAS.r */ = {isa = PBXFileReference; lastKnownFileType = file.r; name = include_juce_audio_plugin_client_RTAS.r; path = ../../JuceLibraryCode/include_juce_audio_plugin_client_RTAS.r; sourceTree = SOURCE_ROOT; };
		444CF130885C7B88E7C2544F /* Standalone Plugin */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = SAFEEqualiser.app; sourceTree = BUILT_PRODUCTS_DIR; };
		4B40CFCF7EF6F08EBFC4D9F7 /* PluginEditor.cpp */ /* PluginEditor.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; name = PluginEditor.cpp; path = ../../Source/PluginEditor.cpp; sourceTree = SOURCE_ROOT; };
		4E45C21D7942EC3B07668B80 /* include_juce_audio_plugin_client_RTAS_3.cpp */ /* include_juce_audio_plugin_client_RTAS_3.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; name = include_juce_audio_plugin_client_RTAS_3.cpp; path = ../../JuceLibraryCode/include_juce_audio_plugin_client_RTAS_3.cpp; sourceTree = SOURCE_ROOT; };
		4FBBA9CB9D65C019BCE864A3 /* juce_audio_processors */ /* juce_audio_processors */ = {isa = PBXFileReference; lastKnownFileType = folder; name = juce_audio_processors; path = "~/JUCE/modules/juce_audio_processors"; sourceTree = "<absolute>"; };
		501C3C562CF40DC5DE649EFA /* PluginProcessor.cpp */ /* PluginProcessor.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; name = PluginProcessor.cpp; path = ../../Source/PluginProcessor.cpp; sourceTree = SOURCE_ROOT; };
		50CA3F323FF642DACEF06146 /* juce_events */ /* juce_events */ = {isa = PBXFileReference; lastKnownFileType = folder; name = juce_events; path = "~/JUCE/modules/juce_events"; sourceTree = "<absolute>"; };
		510FAE4530DE6863808561C9 /* juce_audio_devices */ /* juce_audio_devices */ = {isa = PBXFileReference; lastKnownFileType = folder; name = juce_audio_devices; path = "~/JUCE/modules/juce_audio_devices"; sourceTree = "<absolute>"; };
		513595F7F94804AB5BE2AB37 /* include_juce_gui_extra.mm */ /* include_juce_gui_extra.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_gui_extra.mm; path = ../../JuceLibraryCode/include_juce_gui_extra.mm; sourceTree = SOURCE_ROOT; };
		544BDC63186AAF7BFEE48A61 /* Info-Standalone_Plugin.plist */ /* Info-Standalone_Plugin.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "Info-Standalone_Plugin.plist"; path = "Info-Standalone_Plugin.plist"; sourceTree = SOURCE_ROOT; };
		557CD89A83E74788D91DDF2F /* AppConfig.h */ /* AppConfig.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = AppConfig.h; path = ../../JuceLibraryCode/AppConfig.h; sourceTree = SOURCE_ROOT; };
		55D910CF16E90DBEC0D42343 /* IOKit.framework */ /* IOKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = IOKit.framework; path = System/Library/Frameworks/IOKit.framework; sourceTree = SDKROOT; };
		5B75B2C310F074F5159C8A07 /* AudioToolbox.framework */ /* AudioToolbox.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = AudioToolbox.framework; path = System/Library/Frameworks/AudioToolbox.framework; sourceTree = SDKROOT; };
		5ECB4654AD1B1E7F20932DF3 /* juce_gui_extra */ /* juce_gui_extra */ = {isa = PBXFileReference; lastKnownFileType = folder; name = juce_gui_extra; path = "~/JUCE/modules/juce_gui_extra"; sourceTree = "<absolute>"; };
		5F9E6B05F1FE67EF0F0839EF /* include_juce_audio_utils.mm */ /* include_juce_audio_utils.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_audio_utils.mm; path = ../../JuceLibraryCode/include_juce_audio_utils.mm; sourceTree = SOURCE_ROOT; };
		615AFAFB5D0936EC0B80C776 /* juce_audio_utils */ /* juce_audio_utils */ = {isa = PBXFileReference; lastKnownFileType = folder; name = juce_audio_utils; path = "~/JUCE/modules/juce_audio_utils"; sourceTree = "<absolute>"; };
		64B44BB7B3AAFE7A6527AB11 /* QuartzCore.framework */ /* QuartzCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = QuartzCore.framework; path = System/Library/Frameworks/QuartzCore.framework; sourceTree = SDKROOT; };
		6A9AB47C7382736F511DFBD8 /* include_juce_audio_devices.mm */ /* include_juce_audio_devices.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_audio_devices.mm; path = ../../JuceLibraryCode/include_juce_audio_devices.mm; sourceTree = SOURCE_ROOT; };
		6AE704AD35983C1151182D17 /* Info-VST.plist */ /* Info-VST.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "Info-VST.plist"; path = "Info-VST.plist"; sourceTree = SOURCE_ROOT; };
		71426CD925766C02C9D3E61D /* include_juce_audio_plugin_client_AU.r */ /* include_juce_audio_plugin_client_AU.r */ = {isa = PBXFileReference; lastKnownFileType = file.r; name = include_juce_audio_plugin_client_AU.r; path = ../../JuceLibraryCode/include_juce_audio_plugin_client_AU.r; sourceTree = SOURCE_ROOT; };
		733B03FAA6625435175AD287 /* include_juce_audio_plugin_client_RTAS_2.cpp */ /* include_juce_audio_plugin_client_RTAS_2.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; name = include_juce_audio_plugin_client_RTAS_2.cpp; path = ../../JuceLibraryCode/include_juce_audio_plugin_client_RTAS_2.cpp; sourceTree = SOURCE_ROOT; };
		7A2CAB64D199F6259EB56C54 /* Accelerate.framework */ /* Accelerate.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Accelerate.framework; path = System/Library/Frameworks/Accelerate.framework; sourceTree = SDKROOT; };
		7AABBCB08433DBC4D64BAE13 /* include_juce_graphics.mm */ /* include_juce_graphics.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_graphics.mm; path = ../../JuceLibraryCode/include_juce_graphics.mm; sourceTree = SOURCE_ROOT; };
		8036AA9D0126B373010EDEA6 /* OpenGL.framework */ /* OpenGL.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = OpenGL.framework; path = System/Library/Frameworks/OpenGL.framework; sourceTree = SDKROOT; };
		831A9566057400325335FA36 /* juce_cryptography */ /* juce_cryptography */ = {isa = PBXFileReference; lastKnownFileType = folder; name = juce_cryptography; path = "~/JUCE/modules/juce_cryptography"; sourceTree = "<absolute>"; };
		89D55A6AE60554E0AA12624F /* CoreAudio.framework */ /* CoreAudio.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreAudio.framework; path = System/Library/Frameworks/CoreAudio.framework; sourceTree = SDKROOT; };
		8B1D4302DC287E248381516B /* Info-AU.plist */ /* Info-AU.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "Info-AU.plist"; path = "Info-AU.plist"; sourceTree = SOURCE_ROOT; };
		8D33B9FA45A7131A88CD828D /* include_juce_opengl.mm */ /* include_juce_opengl.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_opengl.mm; path = ../../JuceLibraryCode/include_juce_opengl.mm; sourceTree = SOURCE_ROOT; };
		8F34D50F42BA2BF3321BC4C6 /* include_juce_events.mm */ /* include_juce_events.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_events.mm; path = ../../JuceLibraryCode/include_juce_events.mm; sourceTree = SOURCE_ROOT; };
		9DD263265E1E5FE0763090A0 /* juce_graphics */ /* juce_graphics */ = {isa = PBXFileReference; lastKnownFileType = folder; name = juce_graphics; path = "~/JUCE/modules/juce_graphics"; sourceTree = "<absolute>"; };
		A13D82FE00FBEF6220D8A2CD /* include_juce_data_structures.mm */ /* include_juce_data_structures.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_data_structures.mm; path = ../../JuceLibraryCode/include_juce_data_structures.mm; sourceTree = SOURCE_ROOT; };
		A14ACF4809FF4BF9BA5E3D4C /* include_juce_audio_plugin_client_VST_utils.mm */ /* include_juce_audio_plugin_client_VST_utils.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_audio_plugin_client_VST_utils.mm; path = ../../JuceLibraryCode/include_juce_audio_plugin_client_VST_utils.mm; sourceTree = SOURCE_ROOT; };
		A48D458412B574CBFE32498A /* juce_data_structures */ /* juce_data_structures */ = {isa = PBXFileReference; lastKnownFileType = folder; name = juce_data_structures; path = "~/JUCE/modules/juce_data_structures"; sourceTree = "<absolute>"; };
		A9381F8949DC2E1A85D5D4FB /* RecentFilesMenuTemplate.nib */ /* RecentFilesMenuTemplate.nib */ = {isa = PBXFileReference; lastKnownFileType = file.nib; name = RecentFilesMenuTemplate.nib; path = RecentFilesMenuTemplate.nib; sourceTree = SOURCE_ROOT; };
		ABA2055B5D446E4A4E4B6247 /* JucePluginDefines.h */ /* JucePluginDefines.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = JucePluginDefines.h; path = ../../JuceLibraryCode/JucePluginDefines.h; sourceTree = SOURCE_ROOT; };
		B46FA2459EB1811ADEB7C286 /* include_juce_audio_basics.mm */ /* include_juce_audio_basics.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_audio_basics.mm; path = ../../JuceLibraryCode/include_juce_audio_basics.mm; sourceTree = SOURCE_ROOT; };
		BDD556FCA5A669152B49FB41 /* Cocoa.framework */ /* Cocoa.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Cocoa.framework; path = System/Library/Frameworks/Cocoa.framework; sourceTree = SDKROOT; };
		C21734D6566FCC85805DAA75 /* Carbon.framework */ /* Carbon.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Carbon.framework; path = System/Library/Frameworks/Carbon.framework; sourceTree = SDKROOT; };
		C56DA2EE4B75D3D4BC2DF04E /* include_juce_audio_plugin_client_VST2.cpp */ /* include_juce_audio_plugin_client_VST2.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; name = include_juce_audio_plugin_client_VST2.cpp; path = ../../JuceLibraryCode/include_juce_audio_plugin_client_VST2.cpp; sourceTree = SOURCE_ROOT; };
		C96EDB34073FBD0D95F54D76 /* PluginEditor.h */ /* PluginEditor.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = PluginEditor.h; path = ../../Source/PluginEditor.h; sourceTree = SOURCE_ROOT; };
		D1B18D6019F183399BCF0FBF /* include_juce_audio_plugin_client_AU_1.mm */ /* include_juce_audio_plugin_client_AU_1.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_audio_plugin_client_AU_1.mm; path = ../../JuceLibraryCode/include_juce_audio_plugin_client_AU_1.mm; sourceTree = SOURCE_ROOT; };
		E143F016AB520080119066F3 /* VST */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = SAFEEqualiser.vst; sourceTree = BUILT_PRODUCTS_DIR; };
		E1D63C4761B0BBB676D5BEB3 /* Shared Code */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libSAFEEqualiser.a; sourceTree = BUILT_PRODUCTS_DIR; };
		E2A7EA42A2D04F8AA9A0A919 /* include_juce_audio_plugin_client_AU_2.mm */ /* include_juce_audio_plugin_client_AU_2.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_audio_plugin_client_AU_2.mm; path = ../../JuceLibraryCode/include_juce_audio_plugin_client_AU_2.mm; sourceTree = SOURCE_ROOT; };
		E2C7A0B870A6ECDB3726729E /* juce_audio_basics */ /* juce_audio_basics */ = {isa = PBXFileReference; lastKnownFileType = folder; name = juce_audio_basics; path = "~/JUCE/modules/juce_audio_basics"; sourceTree = "<absolute>"; };
		E4D933D07BA9779011D4032A /* juce_core */ /* juce_core */ = {isa = PBXFileReference; lastKnownFileType = folder; name = juce_core; path = "~/JUCE/modules/juce_core"; sourceTree = "<absolute>"; };
		E7F8E07EDAED04E410358670 /* include_juce_audio_processors.mm */ /* include_juce_audio_processors.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_audio_processors.mm; path = ../../JuceLibraryCode/include_juce_audio_processors.mm; sourceTree = SOURCE_ROOT; };
		EDC857ABDDEE1B6F36F0A19C /* JuceHeader.h */ /* JuceHeader.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = JuceHeader.h; path = ../../JuceLibraryCode/JuceHeader.h; sourceTree = SOURCE_ROOT; };
		F5B87B0DDC124EDAB45435F9 /* include_juce_audio_plugin_client_Standalone.cpp */ /* include_juce_audio_plugin_client_Standalone.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; name = include_juce_audio_plugin_client_Standalone.cpp; path = ../../JuceLibraryCode/include_juce_audio_plugin_client_Standalone.cpp; sourceTree = SOURCE_ROOT; };
		F8BC860763B0196C20495E13 /* include_juce_audio_plugin_client_RTAS_4.cpp */ /* include_juce_audio_plugin_client_RTAS_4.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; name = include_juce_audio_plugin_client_RTAS_4.cpp; path = ../../JuceLibraryCode/include_juce_audio_plugin_client_RTAS_4.cpp; sourceTree = SOURCE_ROOT; };
		FB21743174B9630BD039F5F3 /* CoreAudioKit.framework */ /* CoreAudioKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreAudioKit.framework; path = System/Library/Frameworks/CoreAudioKit.framework; sourceTree = SDKROOT; };
		FB727380BB27774A3AED4013 /* juce_opengl */ /* juce_opengl */ = {isa = PBXFileReference; lastKnownFileType = folder; name = juce_opengl; path = "~/JUCE/modules/juce_opengl"; sourceTree = "<absolute>"; };
		FD1D5D5A36CA10B3EB12A46F /* include_juce_gui_basics.mm */ /* include_juce_gui_basics.mm */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.objcpp; name = include_juce_gui_basics.mm; path = ../../JuceLibraryCode/include_juce_gui_basics.mm; sourceTree = SOURCE_ROOT; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		03A14D1F04E9AAD17A724666 = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9FC9146E497162CB65B7C1D7,
				EFDAA4E93A8F91C806776059,
				13652EDA3D8D4949A238E56E,
				FD1615003A116D03FBEE23B2,
				037232E151345D0DC9F8A178,
				877248A699591145BF7AC8EC,
				B5CFF3F3D2C462A33763A751,
				8CF8D6393B989DECFEA303AF,
				09A91AB65C141DEDD2801F0A,
				D9B4367468C28AA036D6686D,
				821699B91C8AC6013954A9A5,
				6F6F1F9EB1B60AD178259C75,
				F51B9563017380E19B074ABB,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		427679B896BF404739EB58D4 = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9FC9146E497162CB65B7C1D7,
				EFDAA4E93A8F91C806776059,
				13652EDA3D8D4949A238E56E,
				FD1615003A116D03FBEE23B2,
				037232E151345D0DC9F8A178,
				877248A699591145BF7AC8EC,
				B5CFF3F3D2C462A33763A751,
				8CF8D6393B989DECFEA303AF,
				09A91AB65C141DEDD2801F0A,
				D9B4367468C28AA036D6686D,
				821699B91C8AC6013954A9A5,
				6F6F1F9EB1B60AD178259C75,
				F51B9563017380E19B074ABB,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		73B8C0CBB9B5C976270D6CEC = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9FC9146E497162CB65B7C1D7,
				EFDAA4E93A8F91C806776059,
				13652EDA3D8D4949A238E56E,
				FD1615003A116D03FBEE23B2,
				037232E151345D0DC9F8A178,
				877248A699591145BF7AC8EC,
				B5CFF3F3D2C462A33763A751,
				8CF8D6393B989DECFEA303AF,
				09A91AB65C141DEDD2801F0A,
				D9B4367468C28AA036D6686D,
				821699B91C8AC6013954A9A5,
				6F6F1F9EB1B60AD178259C75,
				F51B9563017380E19B074ABB,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F96D18629C16F1E65CEB6679 = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9CDB24247168F75098D6E66E,
				9FC9146E497162CB65B7C1D7,
				EFDAA4E93A8F91C806776059,
				13652EDA3D8D4949A238E56E,
				FD1615003A116D03FBEE23B2,
				037232E151345D0DC9F8A178,
				877248A699591145BF7AC8EC,
				B5CFF3F3D2C462A33763A751,
				8CF8D6393B989DECFEA303AF,
				09A91AB65C141DEDD2801F0A,
				D9B4367468C28AA036D6686D,
				821699B91C8AC6013954A9A5,
				6F6F1F9EB1B60AD178259C75,
				F51B9563017380E19B074ABB,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		1740887C88C456F4D016A029 /* SAFEEqualiser */ = {
			isa = PBXGroup;
			children = (
				BFB8B21353C095CE56EB0861,
			);
			name = SAFEEqualiser;
			sourceTree = "<group>";
		};
		633BCF98B44EF991F238D5B9 /* Source */ = {
			isa = PBXGroup;
			children = (
				1740887C88C456F4D016A029,
				DC1D2A78159BC58308E91E2D,
				E4C883C9E52EC3D62D7A4DBD,
				F7087E3FDF543E73FCDDAB1B,
				71378964DFD34DE614CFB230,
				BD3CE19C4C5078D8328B8F23,
			);
			name = Source;
			sourceTree = "<group>";
		};
		71378964DFD34DE614CFB230 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				202CBA1F0C5B0F9F83549BF4,
				7A2CAB64D199F6259EB56C54,
				5B75B2C310F074F5159C8A07,
				C21734D6566FCC85805DAA75,
				BDD556FCA5A669152B49FB41,
				89D55A6AE60554E0AA12624F,
				FB21743174B9630BD039F5F3,
				07A11304D1715CC51B076D02,
				0B6D8C840A3CF024C0789CA4,
				0DBF9238441A8F7E5772EDFB,
				55D910CF16E90DBEC0D42343,
				8036AA9D0126B373010EDEA6,
				64B44BB7B3AAFE7A6527AB11,
				2FB8BF30107AA2AA3146AC7F,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		BD3CE19C4C5078D8328B8F23 /* Products */ = {
			isa = PBXGroup;
			children = (
				E143F016AB520080119066F3,
				2C49A11A6C5BAC5E4AA4D3FD,
				0C8928B3A574337883F2A358,
				444CF130885C7B88E7C2544F,
				E1D63C4761B0BBB676D5BEB3,
			);
			name = Products;
			sourceTree = "<group>";
		};
		BFB8B21353C095CE56EB0861 /* Source */ = {
			isa = PBXGroup;
			children = (
				501C3C562CF40DC5DE649EFA,
				3FBBB29D2F9351F30C4E70DE,
				4B40CFCF7EF6F08EBFC4D9F7,
				C96EDB34073FBD0D95F54D76,
			);
			name = Source;
			sourceTree = "<group>";
		};
		DC1D2A78159BC58308E91E2D /* JUCE Modules */ = {
			isa = PBXGroup;
			children = (
				E2C7A0B870A6ECDB3726729E,
				510FAE4530DE6863808561C9,
				289F9D3E94831345AB513778,
				1B9914C5C1F799A370071618,
				4FBBA9CB9D65C019BCE864A3,
				615AFAFB5D0936EC0B80C776,
				E4D933D07BA9779011D4032A,
				831A9566057400325335FA36,
				A48D458412B574CBFE32498A,
				50CA3F323FF642DACEF06146,
				9DD263265E1E5FE0763090A0,
				33380BFE04830D3875BD2795,
				5ECB4654AD1B1E7F20932DF3,
				FB727380BB27774A3AED4013,
			);
			name = "JUCE Modules";
			sourceTree = "<group>";
		};
		E4C883C9E52EC3D62D7A4DBD /* JUCE Library Code */ = {
			isa = PBXGroup;
			children = (
				557CD89A83E74788D91DDF2F,
				B46FA2459EB1811ADEB7C286,
				6A9AB47C7382736F511DFBD8,
				0C9FE4EB57BC9C4004EF6F41,
				71426CD925766C02C9D3E61D,
				D1B18D6019F183399BCF0FBF,
				E2A7EA42A2D04F8AA9A0A919,
				03D3B58695F353AAD02755AC,
				733B03FAA6625435175AD287,
				4E45C21D7942EC3B07668B80,
				F8BC860763B0196C20495E13,
				05BAE7C7DE50B4ADDDD4CD25,
				F5B87B0DDC124EDAB45435F9,
				2B429895FAD7A9B44BE7EC2E,
				A14ACF4809FF4BF9BA5E3D4C,
				C56DA2EE4B75D3D4BC2DF04E,
				1813F2F355D9601EA59E2953,
				E7F8E07EDAED04E410358670,
				5F9E6B05F1FE67EF0F0839EF,
				03F9E32DF5DF29382FEC60E7,
				0B090D843621554ABC1B45D9,
				A13D82FE00FBEF6220D8A2CD,
				8F34D50F42BA2BF3321BC4C6,
				7AABBCB08433DBC4D64BAE13,
				FD1D5D5A36CA10B3EB12A46F,
				513595F7F94804AB5BE2AB37,
				8D33B9FA45A7131A88CD828D,
				EDC857ABDDEE1B6F36F0A19C,
				ABA2055B5D446E4A4E4B6247,
			);
			name = "JUCE Library Code";
			sourceTree = "<group>";
		};
		F7087E3FDF543E73FCDDAB1B /* Resources */ = {
			isa = PBXGroup;
			children = (
				6AE704AD35983C1151182D17,
				3D6CAAF68C61CC1A3BF27398,
				8B1D4302DC287E248381516B,
				544BDC63186AAF7BFEE48A61,
				A9381F8949DC2E1A85D5D4FB,
			);
			name = Resources;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		06237C21A7AA1A2967CDF7DC /* SAFEEqualiser - Standalone Plugin */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 32C8C7311E341A1E14555347;
			buildPhases = (
				FB406DB4F2DA22E739594F1C,
				01C2B24565B67692EC26C636,
				03A14D1F04E9AAD17A724666,
				5F1A81A680B0C651EE7AC58D,
			);
			buildRules = (
			);
			dependencies = (
				738CC27AF86B61F3A2562041,
			);
			name = "SAFEEqualiser - Standalone Plugin";
			productName = SAFEEqualiser;
			productReference = 444CF130885C7B88E7C2544F;
			productType = "com.apple.product-type.application";
		};
		64FD1E54828824280D02399F /* SAFEEqualiser - AU */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4128B3BB1B7332D074484CFF;
			buildPhases = (
				31C7D8A6CC9EA8F782ED1D77,
				C73071177D95767ED5A98C6C,
				78E6E9C0A6A978EBCBC7CD13,
				F96D18629C16F1E65CEB6679,
				8A287921AC689C9D8ACDD1D7,
			);
			buildRules = (
			);
			dependencies = (
				4C030C5087365BD74CED21E7,
			);
			name = "SAFEEqualiser - AU";
			productName = SAFEEqualiser;
			productReference = 0C8928B3A574337883F2A358;
			productType = "com.apple.product-type.bundle";
		};
		8463612D29B95A1577538D0A /* SAFEEqualiser - Shared Code */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = F4B65DBCBA68762FAF69582A;
			buildPhases = (
				9635F63F813AE098AFEF9003,
				DFE4CC508342DE3F79E2E7BE,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "SAFEEqualiser - Shared Code";
			productName = SAFEEqualiser;
			productReference = E1D63C4761B0BBB676D5BEB3;
			productType = "com.apple.product-type.library.static";
		};
		855073AD4B6DC2C324F2D08E /* SAFEEqualiser - VST */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 477E3F0309B18A30D1C88F2C;
			buildPhases = (
				C015056BF5E431CA763D2A8B,
				53D3FAC0DE0C7091EBAAD634,
				73B8C0CBB9B5C976270D6CEC,
				91951EA05180CFB16CF3C872,
			);
			buildRules = (
			);
			dependencies = (
				C2BEA24D01C49DA4905683B2,
			);
			name = "SAFEEqualiser - VST";
			productName = SAFEEqualiser;
			productReference = E143F016AB520080119066F3;
			productType = "com.apple.product-type.bundle";
		};
		A9CF4094F370154069DEB8EA /* SAFEEqualiser - VST3 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 6C0DD00AE05998B735BA5BD5;
			buildPhases = (
				5C63C8BC67ABE91B2CD2143C,
				347FAA19BF1861CB7A2228B5,
				427679B896BF404739EB58D4,
				0C94A200F5716379833BD1C3,
			);
			buildRules = (
			);
			dependencies = (
				ADF40297BB143EA61E56DFE4,
			);
			name = "SAFEEqualiser - VST3";
			productName = SAFEEqualiser;
			productReference = 2C49A11A6C5BAC5E4AA4D3FD;
			productType = "com.apple.product-type.bundle";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		5253E4E73AF4BD1130F33B06 = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1340;
				ORGANIZATIONNAME = "SAFE";
				TargetAttributes = {
					06237C21A7AA1A2967CDF7DC = {
						SystemCapabilities = {
							com.apple.ApplicationGroups.iOS = {
								enabled = 0;
							};
							com.apple.HardenedRuntime = {
								enabled = 0;
							};
							com.apple.InAppPurchase = {
								enabled = 0;
							};
							com.apple.InterAppAudio = {
								enabled = 0;
							};
							com.apple.Push = {
								enabled = 0;
							};
							com.apple.Sandbox = {
								enabled = 0;
							};
						};
					};
					40D4497885B9CD8E1E5889AF = {
						SystemCapabilities = {
							com.apple.ApplicationGroups.iOS = {
								enabled = 0;
							};
							com.apple.HardenedRuntime = {
								enabled = 0;
							};
							com.apple.InAppPurchase = {
								enabled = 0;
							};
							com.apple.InterAppAudio = {
								enabled = 0;
							};
							com.apple.Push = {
								enabled = 0;
							};
							com.apple.Sandbox = {
								enabled = 0;
							};
						};
					};
					64FD1E54828824280D02399F = {
						SystemCapabilities = {
							com.apple.ApplicationGroups.iOS = {
								enabled = 0;
							};
							com.apple.HardenedRuntime = {
								enabled = 0;
							};
							com.apple.InAppPurchase = {
								enabled = 0;
							};
							com.apple.InterAppAudio = {
								enabled = 0;
							};
							com.apple.Push = {
								enabled = 0;
							};
							com.apple.Sandbox = {
								enabled = 0;
							};
						};
					};
					8463612D29B95A1577538D0A = {
						SystemCapabilities = {
							com.apple.ApplicationGroups.iOS = {
								enabled = 0;
							};
							com.apple.HardenedRuntime = {
								enabled = 0;
							};
							com.apple.InAppPurchase = {
								enabled = 0;
							};
							com.apple.InterAppAudio = {
								enabled = 0;
							};
							com.apple.Push = {
								enabled = 0;
							};
							com.apple.Sandbox = {
								enabled = 0;
							};
						};
					};
					855073AD4B6DC2C324F2D08E = {
						SystemCapabilities = {
							com.apple.ApplicationGroups.iOS = {
								enabled = 0;
							};
							com.apple.HardenedRuntime = {
								enabled = 0;
							};
							com.apple.InAppPurchase = {
								enabled = 0;
							};
							com.apple.InterAppAudio = {
								enabled = 0;
							};
							com.apple.Push = {
								enabled = 0;
							};
							com.apple.Sandbox = {
								enabled = 0;
							};
						};
					};
					A9CF4094F370154069DEB8EA = {
						SystemCapabilities = {
							com.apple.ApplicationGroups.iOS = {
								enabled = 0;
							};
							com.apple.HardenedRuntime = {
								enabled = 0;
							};
							com.apple.InAppPurchase = {
								enabled = 0;
							};
							com.apple.InterAppAudio = {
								enabled = 0;
							};
							com.apple.Push = {
								enabled = 0;
							};
							com.apple.Sandbox = {
								enabled = 0;
							};
						};
					};
				};
			};
			buildConfigurationList = C455BA805B81F53288E730E3;
			compatibilityVersion = "Xcode 3.2";
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 633BCF98B44EF991F238D5B9;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				40D4497885B9CD8E1E5889AF,
				855073AD4B6DC2C324F2D08E,
				A9CF4094F370154069DEB8EA,
				64FD1E54828824280D02399F,
				06237C21A7AA1A2967CDF7DC,
				8463612D29B95A1577538D0A,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		31C7D8A6CC9EA8F782ED1D77 = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DA946E7246E90E61AFDCB3F8,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		5C63C8BC67ABE91B2CD2143C = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DA946E7246E90E61AFDCB3F8,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C015056BF5E431CA763D2A8B = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DA946E7246E90E61AFDCB3F8,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FB406DB4F2DA22E739594F1C = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DA946E7246E90E61AFDCB3F8,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXRezBuildPhase section */
		C73071177D95767ED5A98C6C = {
			isa = PBXRezBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D62F197D5A3E3A99430A535D,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXRezBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		0C94A200F5716379833BD1C3 /* Post-build script */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			name = "Post-build script";
			alwaysOutOfDate = 1;
			shellPath = /bin/sh;
			shellScript = "\n# This script takes the build product and copies it to the AU, VST, VST3, RTAS and AAX folders, depending on \n# which plugin types you've built\n\noriginal=$CONFIGURATION_BUILD_DIR/$FULL_PRODUCT_NAME\n\n# this looks inside the binary to detect which platforms are needed.. \ncopyAU=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'AudioUnit' | wc -l`\ncopyVST=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'VSTPlugin' | wc -l`\ncopyVST3=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'GetPluginFactory' | wc -l`\ncopyRTAS=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'CProcess' | wc -l`\ncopyAAX=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'ACFStartup' | wc -l`\n\nif [ $copyAU -gt 0 ]; then\n  echo \"Copying to AudioUnit folder...\"\n  \n  AU=~/Library/Audio/Plug-Ins/Components/$PRODUCT_NAME.component\n  BIN_AU=../../../Bin/$PRODUCT_NAME.component\n  if [ -d \"$AU\" ]; then \n    rm -r \"$AU\"\n  fi\n  cp -r \"$original\" \"$AU\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$AU/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$AU/Contents/$INFOPLIST_FILE\"\n\n  if [ -d \"$BIN_AU\" ]; then \n    rm -r \"$BIN_AU\"\n  fi\n  cp -r \"$original\" \"$BIN_AU\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_AU/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_AU/Contents/$INFOPLIST_FILE\"\n\n  # Fix info.plist for AUs built with Xcode 3\n  if [ -f \"$DEVELOPER_DIR/Library/Developer/CoreAudio/AudioUnits/AUPublic/AUBase/AUPlugInDispatch.cpp\" ]; then\n    echo\n  else\n    echo \"Removing AudioComponents entry from Info.plist because this is not a new-format AU\"\n    /usr/libexec/PlistBuddy -c \"Delete AudioComponents\" \"$AU/Contents/Info.plist\"\n  fi\nfi\n\n\nif [ $copyVST -gt 0 ]; then\n  echo \"Copying to VST folder...\"\n  \n  VST=~/Library/Audio/Plug-Ins/VST/$PRODUCT_NAME.vst\n  BIN_VST=../../../Bin/$PRODUCT_NAME.vst\n  \n  if [ -d \"$VST\" ]; then \n    rm -r \"$VST\"\n  fi\n  cp -r \"$original\" \"$VST\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$VST/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$VST/Contents/$INFOPLIST_FILE\"\n\n\n  if [ -d \"$BIN_VST\" ]; then \n    rm -r \"$BIN_VST\"\n  fi  \n  cp -r \"$original\" \"$BIN_VST\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_VST/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_VST/Contents/$INFOPLIST_FILE\"  \nfi\n\nif [ $copyVST3 -gt 0 ]; then\n  echo \"Copying to VST3 folder...\"\n  VST3=~/Library/Audio/Plug-Ins/VST3/$PRODUCT_NAME.vst3\n  BIN_VST3=../../../Bin/$PRODUCT_NAME.vst3\n\n  if [ -d \"$VST3\" ]; then \n    rm -r \"$VST3\"\n  fi\n  cp -r \"$original\" \"$VST3\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$VST3/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$VST3/Contents/$INFOPLIST_FILE\"\n\n  if [ -d \"$BIN_VST3\" ]; then \n    rm -r \"$BIN_VST3\"\n  fi\n  cp -r \"$original\" \"$BIN_VST3\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_VST3/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_VST3/Contents/$INFOPLIST_FILE\"\nfi\n\nif [ $copyRTAS -gt 0 ]; then\n  echo \"Copying to RTAS folder...\"\n\n  if [ -d \"/Library/Application\\ Support/Digidesign/Plug-Ins\"]; then\n  RTAS=/Library/Application\\ Support/Digidesign/Plug-Ins/$PRODUCT_NAME.dpm  \n  BIN_RTAS=../../../Bin/$PRODUCT_NAME.dpm\n  else\n  RTAS=/Library/Audio/Plug-Ins/Digidesign/$PRODUCT_NAME.dpm  \n  BIN_RTAS=../../../Bin/$PRODUCT_NAME.dpm\n  fi\n  \n  if [ -d \"$RTAS\" ]; then\n    rm -r \"$RTAS\"\n  fi\n  \n  #This doesn't copy over properly! \n  #cp -r \"$original\" \"$RTAS\"\n  \n  if [ -d \"$BIN_RTAS\" ]; then\n    rm -r \"$BIN_RTAS\"\n  fi\n  cp -r \"$original\" \"$BIN_RTAS\"  \n\nfi\n\nif [ $copyAAX -gt 0 ]; then\n  echo \"Copying to AAX folder...\"\n\n  if [ -d \"/Applications/ProTools_3PDev/Plug-Ins\" ]; then\n    AAX1=\"/Applications/ProTools_3PDev/Plug-Ins/$PRODUCT_NAME.aaxplugin\"\n    BIN_AAX1=\"../../../Bin/$PRODUCT_NAME.aaxplugin\"\n\n    if [ -d \"$AAX1\" ]; then\n      rm -r \"$AAX1\"\n    fi\n    if [ -d \"$BIN_AAX1\" ]; then\n      rm -r \"$BIN_AAX1\"\n    fi\n\n    cp -r \"$original\" \"$AAX1\"\n    cp -r \"$original\" \"$BIN_AAX1\"\n  fi\n\n\n  if [ -d \"/Library/Application Support/Avid/Audio/Plug-Ins\" ]; then\n    AAX2=\"/Library/Application Support/Avid/Audio/Plug-Ins/$PRODUCT_NAME.aaxplugin\"\n    BIN_AAX2=\"../../../Bin/$PRODUCT_NAME.aaxplugin\"\n\n    if [ -d \"$AAX2\" ]; then\n      rm -r \"$AAX2\"\n    fi\n    cp -r \"$original\" \"$AAX2\"\n    \n    if [ -d \"$BIN_AAX2\" ]; then\n      rm -r \"$BIN_AAX2\"\n    fi\n    cp -r \"$original\" \"$BIN_AAX2\"\n\n  fi\nfi\n";
		};
		5F1A81A680B0C651EE7AC58D /* Post-build script */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			name = "Post-build script";
			alwaysOutOfDate = 1;
			shellPath = /bin/sh;
			shellScript = "\n# This script takes the build product and copies it to the AU, VST, VST3, RTAS and AAX folders, depending on \n# which plugin types you've built\n\noriginal=$CONFIGURATION_BUILD_DIR/$FULL_PRODUCT_NAME\n\n# this looks inside the binary to detect which platforms are needed.. \ncopyAU=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'AudioUnit' | wc -l`\ncopyVST=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'VSTPlugin' | wc -l`\ncopyVST3=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'GetPluginFactory' | wc -l`\ncopyRTAS=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'CProcess' | wc -l`\ncopyAAX=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'ACFStartup' | wc -l`\n\nif [ $copyAU -gt 0 ]; then\n  echo \"Copying to AudioUnit folder...\"\n  \n  AU=~/Library/Audio/Plug-Ins/Components/$PRODUCT_NAME.component\n  BIN_AU=../../../Bin/$PRODUCT_NAME.component\n  if [ -d \"$AU\" ]; then \n    rm -r \"$AU\"\n  fi\n  cp -r \"$original\" \"$AU\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$AU/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$AU/Contents/$INFOPLIST_FILE\"\n\n  if [ -d \"$BIN_AU\" ]; then \n    rm -r \"$BIN_AU\"\n  fi\n  cp -r \"$original\" \"$BIN_AU\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_AU/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_AU/Contents/$INFOPLIST_FILE\"\n\n  # Fix info.plist for AUs built with Xcode 3\n  if [ -f \"$DEVELOPER_DIR/Library/Developer/CoreAudio/AudioUnits/AUPublic/AUBase/AUPlugInDispatch.cpp\" ]; then\n    echo\n  else\n    echo \"Removing AudioComponents entry from Info.plist because this is not a new-format AU\"\n    /usr/libexec/PlistBuddy -c \"Delete AudioComponents\" \"$AU/Contents/Info.plist\"\n  fi\nfi\n\n\nif [ $copyVST -gt 0 ]; then\n  echo \"Copying to VST folder...\"\n  \n  VST=~/Library/Audio/Plug-Ins/VST/$PRODUCT_NAME.vst\n  BIN_VST=../../../Bin/$PRODUCT_NAME.vst\n  \n  if [ -d \"$VST\" ]; then \n    rm -r \"$VST\"\n  fi\n  cp -r \"$original\" \"$VST\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$VST/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$VST/Contents/$INFOPLIST_FILE\"\n\n\n  if [ -d \"$BIN_VST\" ]; then \n    rm -r \"$BIN_VST\"\n  fi  \n  cp -r \"$original\" \"$BIN_VST\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_VST/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_VST/Contents/$INFOPLIST_FILE\"  \nfi\n\nif [ $copyVST3 -gt 0 ]; then\n  echo \"Copying to VST3 folder...\"\n  VST3=~/Library/Audio/Plug-Ins/VST3/$PRODUCT_NAME.vst3\n  BIN_VST3=../../../Bin/$PRODUCT_NAME.vst3\n\n  if [ -d \"$VST3\" ]; then \n    rm -r \"$VST3\"\n  fi\n  cp -r \"$original\" \"$VST3\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$VST3/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$VST3/Contents/$INFOPLIST_FILE\"\n\n  if [ -d \"$BIN_VST3\" ]; then \n    rm -r \"$BIN_VST3\"\n  fi\n  cp -r \"$original\" \"$BIN_VST3\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_VST3/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_VST3/Contents/$INFOPLIST_FILE\"\nfi\n\nif [ $copyRTAS -gt 0 ]; then\n  echo \"Copying to RTAS folder...\"\n\n  if [ -d \"/Library/Application\\ Support/Digidesign/Plug-Ins\"]; then\n  RTAS=/Library/Application\\ Support/Digidesign/Plug-Ins/$PRODUCT_NAME.dpm  \n  BIN_RTAS=../../../Bin/$PRODUCT_NAME.dpm\n  else\n  RTAS=/Library/Audio/Plug-Ins/Digidesign/$PRODUCT_NAME.dpm  \n  BIN_RTAS=../../../Bin/$PRODUCT_NAME.dpm\n  fi\n  \n  if [ -d \"$RTAS\" ]; then\n    rm -r \"$RTAS\"\n  fi\n  \n  #This doesn't copy over properly! \n  #cp -r \"$original\" \"$RTAS\"\n  \n  if [ -d \"$BIN_RTAS\" ]; then\n    rm -r \"$BIN_RTAS\"\n  fi\n  cp -r \"$original\" \"$BIN_RTAS\"  \n\nfi\n\nif [ $copyAAX -gt 0 ]; then\n  echo \"Copying to AAX folder...\"\n\n  if [ -d \"/Applications/ProTools_3PDev/Plug-Ins\" ]; then\n    AAX1=\"/Applications/ProTools_3PDev/Plug-Ins/$PRODUCT_NAME.aaxplugin\"\n    BIN_AAX1=\"../../../Bin/$PRODUCT_NAME.aaxplugin\"\n\n    if [ -d \"$AAX1\" ]; then\n      rm -r \"$AAX1\"\n    fi\n    if [ -d \"$BIN_AAX1\" ]; then\n      rm -r \"$BIN_AAX1\"\n    fi\n\n    cp -r \"$original\" \"$AAX1\"\n    cp -r \"$original\" \"$BIN_AAX1\"\n  fi\n\n\n  if [ -d \"/Library/Application Support/Avid/Audio/Plug-Ins\" ]; then\n    AAX2=\"/Library/Application Support/Avid/Audio/Plug-Ins/$PRODUCT_NAME.aaxplugin\"\n    BIN_AAX2=\"../../../Bin/$PRODUCT_NAME.aaxplugin\"\n\n    if [ -d \"$AAX2\" ]; then\n      rm -r \"$AAX2\"\n    fi\n    cp -r \"$original\" \"$AAX2\"\n    \n    if [ -d \"$BIN_AAX2\" ]; then\n      rm -r \"$BIN_AAX2\"\n    fi\n    cp -r \"$original\" \"$BIN_AAX2\"\n\n  fi\nfi\n";
		};
		8A287921AC689C9D8ACDD1D7 /* Post-build script */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			name = "Post-build script";
			alwaysOutOfDate = 1;
			shellPath = /bin/sh;
			shellScript = "\n# This script takes the build product and copies it to the AU, VST, VST3, RTAS and AAX folders, depending on \n# which plugin types you've built\n\noriginal=$CONFIGURATION_BUILD_DIR/$FULL_PRODUCT_NAME\n\n# this looks inside the binary to detect which platforms are needed.. \ncopyAU=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'AudioUnit' | wc -l`\ncopyVST=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'VSTPlugin' | wc -l`\ncopyVST3=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'GetPluginFactory' | wc -l`\ncopyRTAS=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'CProcess' | wc -l`\ncopyAAX=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'ACFStartup' | wc -l`\n\nif [ $copyAU -gt 0 ]; then\n  echo \"Copying to AudioUnit folder...\"\n  \n  AU=~/Library/Audio/Plug-Ins/Components/$PRODUCT_NAME.component\n  BIN_AU=../../../Bin/$PRODUCT_NAME.component\n  if [ -d \"$AU\" ]; then \n    rm -r \"$AU\"\n  fi\n  cp -r \"$original\" \"$AU\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$AU/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$AU/Contents/$INFOPLIST_FILE\"\n\n  if [ -d \"$BIN_AU\" ]; then \n    rm -r \"$BIN_AU\"\n  fi\n  cp -r \"$original\" \"$BIN_AU\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_AU/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_AU/Contents/$INFOPLIST_FILE\"\n\n  # Fix info.plist for AUs built with Xcode 3\n  if [ -f \"$DEVELOPER_DIR/Library/Developer/CoreAudio/AudioUnits/AUPublic/AUBase/AUPlugInDispatch.cpp\" ]; then\n    echo\n  else\n    echo \"Removing AudioComponents entry from Info.plist because this is not a new-format AU\"\n    /usr/libexec/PlistBuddy -c \"Delete AudioComponents\" \"$AU/Contents/Info.plist\"\n  fi\nfi\n\n\nif [ $copyVST -gt 0 ]; then\n  echo \"Copying to VST folder...\"\n  \n  VST=~/Library/Audio/Plug-Ins/VST/$PRODUCT_NAME.vst\n  BIN_VST=../../../Bin/$PRODUCT_NAME.vst\n  \n  if [ -d \"$VST\" ]; then \n    rm -r \"$VST\"\n  fi\n  cp -r \"$original\" \"$VST\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$VST/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$VST/Contents/$INFOPLIST_FILE\"\n\n\n  if [ -d \"$BIN_VST\" ]; then \n    rm -r \"$BIN_VST\"\n  fi  \n  cp -r \"$original\" \"$BIN_VST\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_VST/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_VST/Contents/$INFOPLIST_FILE\"  \nfi\n\nif [ $copyVST3 -gt 0 ]; then\n  echo \"Copying to VST3 folder...\"\n  VST3=~/Library/Audio/Plug-Ins/VST3/$PRODUCT_NAME.vst3\n  BIN_VST3=../../../Bin/$PRODUCT_NAME.vst3\n\n  if [ -d \"$VST3\" ]; then \n    rm -r \"$VST3\"\n  fi\n  cp -r \"$original\" \"$VST3\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$VST3/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$VST3/Contents/$INFOPLIST_FILE\"\n\n  if [ -d \"$BIN_VST3\" ]; then \n    rm -r \"$BIN_VST3\"\n  fi\n  cp -r \"$original\" \"$BIN_VST3\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_VST3/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_VST3/Contents/$INFOPLIST_FILE\"\nfi\n\nif [ $copyRTAS -gt 0 ]; then\n  echo \"Copying to RTAS folder...\"\n\n  if [ -d \"/Library/Application\\ Support/Digidesign/Plug-Ins\"]; then\n  RTAS=/Library/Application\\ Support/Digidesign/Plug-Ins/$PRODUCT_NAME.dpm  \n  BIN_RTAS=../../../Bin/$PRODUCT_NAME.dpm\n  else\n  RTAS=/Library/Audio/Plug-Ins/Digidesign/$PRODUCT_NAME.dpm  \n  BIN_RTAS=../../../Bin/$PRODUCT_NAME.dpm\n  fi\n  \n  if [ -d \"$RTAS\" ]; then\n    rm -r \"$RTAS\"\n  fi\n  \n  #This doesn't copy over properly! \n  #cp -r \"$original\" \"$RTAS\"\n  \n  if [ -d \"$BIN_RTAS\" ]; then\n    rm -r \"$BIN_RTAS\"\n  fi\n  cp -r \"$original\" \"$BIN_RTAS\"  \n\nfi\n\nif [ $copyAAX -gt 0 ]; then\n  echo \"Copying to AAX folder...\"\n\n  if [ -d \"/Applications/ProTools_3PDev/Plug-Ins\" ]; then\n    AAX1=\"/Applications/ProTools_3PDev/Plug-Ins/$PRODUCT_NAME.aaxplugin\"\n    BIN_AAX1=\"../../../Bin/$PRODUCT_NAME.aaxplugin\"\n\n    if [ -d \"$AAX1\" ]; then\n      rm -r \"$AAX1\"\n    fi\n    if [ -d \"$BIN_AAX1\" ]; then\n      rm -r \"$BIN_AAX1\"\n    fi\n\n    cp -r \"$original\" \"$AAX1\"\n    cp -r \"$original\" \"$BIN_AAX1\"\n  fi\n\n\n  if [ -d \"/Library/Application Support/Avid/Audio/Plug-Ins\" ]; then\n    AAX2=\"/Library/Application Support/Avid/Audio/Plug-Ins/$PRODUCT_NAME.aaxplugin\"\n    BIN_AAX2=\"../../../Bin/$PRODUCT_NAME.aaxplugin\"\n\n    if [ -d \"$AAX2\" ]; then\n      rm -r \"$AAX2\"\n    fi\n    cp -r \"$original\" \"$AAX2\"\n    \n    if [ -d \"$BIN_AAX2\" ]; then\n      rm -r \"$BIN_AAX2\"\n    fi\n    cp -r \"$original\" \"$BIN_AAX2\"\n\n  fi\nfi\n";
		};
		91951EA05180CFB16CF3C872 /* Post-build script */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			name = "Post-build script";
			alwaysOutOfDate = 1;
			shellPath = /bin/sh;
			shellScript = "\n# This script takes the build product and copies it to the AU, VST, VST3, RTAS and AAX folders, depending on \n# which plugin types you've built\n\noriginal=$CONFIGURATION_BUILD_DIR/$FULL_PRODUCT_NAME\n\n# this looks inside the binary to detect which platforms are needed.. \ncopyAU=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'AudioUnit' | wc -l`\ncopyVST=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'VSTPlugin' | wc -l`\ncopyVST3=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'GetPluginFactory' | wc -l`\ncopyRTAS=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'CProcess' | wc -l`\ncopyAAX=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'ACFStartup' | wc -l`\n\nif [ $copyAU -gt 0 ]; then\n  echo \"Copying to AudioUnit folder...\"\n  \n  AU=~/Library/Audio/Plug-Ins/Components/$PRODUCT_NAME.component\n  BIN_AU=../../../Bin/$PRODUCT_NAME.component\n  if [ -d \"$AU\" ]; then \n    rm -r \"$AU\"\n  fi\n  cp -r \"$original\" \"$AU\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$AU/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$AU/Contents/$INFOPLIST_FILE\"\n\n  if [ -d \"$BIN_AU\" ]; then \n    rm -r \"$BIN_AU\"\n  fi\n  cp -r \"$original\" \"$BIN_AU\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_AU/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_AU/Contents/$INFOPLIST_FILE\"\n\n  # Fix info.plist for AUs built with Xcode 3\n  if [ -f \"$DEVELOPER_DIR/Library/Developer/CoreAudio/AudioUnits/AUPublic/AUBase/AUPlugInDispatch.cpp\" ]; then\n    echo\n  else\n    echo \"Removing AudioComponents entry from Info.plist because this is not a new-format AU\"\n    /usr/libexec/PlistBuddy -c \"Delete AudioComponents\" \"$AU/Contents/Info.plist\"\n  fi\nfi\n\n\nif [ $copyVST -gt 0 ]; then\n  echo \"Copying to VST folder...\"\n  \n  VST=~/Library/Audio/Plug-Ins/VST/$PRODUCT_NAME.vst\n  BIN_VST=../../../Bin/$PRODUCT_NAME.vst\n  \n  if [ -d \"$VST\" ]; then \n    rm -r \"$VST\"\n  fi\n  cp -r \"$original\" \"$VST\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$VST/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$VST/Contents/$INFOPLIST_FILE\"\n\n\n  if [ -d \"$BIN_VST\" ]; then \n    rm -r \"$BIN_VST\"\n  fi  \n  cp -r \"$original\" \"$BIN_VST\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_VST/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_VST/Contents/$INFOPLIST_FILE\"  \nfi\n\nif [ $copyVST3 -gt 0 ]; then\n  echo \"Copying to VST3 folder...\"\n  VST3=~/Library/Audio/Plug-Ins/VST3/$PRODUCT_NAME.vst3\n  BIN_VST3=../../../Bin/$PRODUCT_NAME.vst3\n\n  if [ -d \"$VST3\" ]; then \n    rm -r \"$VST3\"\n  fi\n  cp -r \"$original\" \"$VST3\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$VST3/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$VST3/Contents/$INFOPLIST_FILE\"\n\n  if [ -d \"$BIN_VST3\" ]; then \n    rm -r \"$BIN_VST3\"\n  fi\n  cp -r \"$original\" \"$BIN_VST3\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_VST3/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_VST3/Contents/$INFOPLIST_FILE\"\nfi\n\nif [ $copyRTAS -gt 0 ]; then\n  echo \"Copying to RTAS folder...\"\n\n  if [ -d \"/Library/Application\\ Support/Digidesign/Plug-Ins\"]; then\n  RTAS=/Library/Application\\ Support/Digidesign/Plug-Ins/$PRODUCT_NAME.dpm  \n  BIN_RTAS=../../../Bin/$PRODUCT_NAME.dpm\n  else\n  RTAS=/Library/Audio/Plug-Ins/Digidesign/$PRODUCT_NAME.dpm  \n  BIN_RTAS=../../../Bin/$PRODUCT_NAME.dpm\n  fi\n  \n  if [ -d \"$RTAS\" ]; then\n    rm -r \"$RTAS\"\n  fi\n  \n  #This doesn't copy over properly! \n  #cp -r \"$original\" \"$RTAS\"\n  \n  if [ -d \"$BIN_RTAS\" ]; then\n    rm -r \"$BIN_RTAS\"\n  fi\n  cp -r \"$original\" \"$BIN_RTAS\"  \n\nfi\n\nif [ $copyAAX -gt 0 ]; then\n  echo \"Copying to AAX folder...\"\n\n  if [ -d \"/Applications/ProTools_3PDev/Plug-Ins\" ]; then\n    AAX1=\"/Applications/ProTools_3PDev/Plug-Ins/$PRODUCT_NAME.aaxplugin\"\n    BIN_AAX1=\"../../../Bin/$PRODUCT_NAME.aaxplugin\"\n\n    if [ -d \"$AAX1\" ]; then\n      rm -r \"$AAX1\"\n    fi\n    if [ -d \"$BIN_AAX1\" ]; then\n      rm -r \"$BIN_AAX1\"\n    fi\n\n    cp -r \"$original\" \"$AAX1\"\n    cp -r \"$original\" \"$BIN_AAX1\"\n  fi\n\n\n  if [ -d \"/Library/Application Support/Avid/Audio/Plug-Ins\" ]; then\n    AAX2=\"/Library/Application Support/Avid/Audio/Plug-Ins/$PRODUCT_NAME.aaxplugin\"\n    BIN_AAX2=\"../../../Bin/$PRODUCT_NAME.aaxplugin\"\n\n    if [ -d \"$AAX2\" ]; then\n      rm -r \"$AAX2\"\n    fi\n    cp -r \"$original\" \"$AAX2\"\n    \n    if [ -d \"$BIN_AAX2\" ]; then\n      rm -r \"$BIN_AAX2\"\n    fi\n    cp -r \"$original\" \"$BIN_AAX2\"\n\n  fi\nfi\n";
		};
		AC987194687F9331F158DA2E /* Post-build script */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			name = "Post-build script";
			alwaysOutOfDate = 1;
			shellPath = /bin/sh;
			shellScript = "\n# This script takes the build product and copies it to the AU, VST, VST3, RTAS and AAX folders, depending on \n# which plugin types you've built\n\noriginal=$CONFIGURATION_BUILD_DIR/$FULL_PRODUCT_NAME\n\n# this looks inside the binary to detect which platforms are needed.. \ncopyAU=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'AudioUnit' | wc -l`\ncopyVST=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'VSTPlugin' | wc -l`\ncopyVST3=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'GetPluginFactory' | wc -l`\ncopyRTAS=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'CProcess' | wc -l`\ncopyAAX=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'ACFStartup' | wc -l`\n\nif [ $copyAU -gt 0 ]; then\n  echo \"Copying to AudioUnit folder...\"\n  \n  AU=~/Library/Audio/Plug-Ins/Components/$PRODUCT_NAME.component\n  BIN_AU=../../../Bin/$PRODUCT_NAME.component\n  if [ -d \"$AU\" ]; then \n    rm -r \"$AU\"\n  fi\n  cp -r \"$original\" \"$AU\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$AU/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$AU/Contents/$INFOPLIST_FILE\"\n\n  if [ -d \"$BIN_AU\" ]; then \n    rm -r \"$BIN_AU\"\n  fi\n  cp -r \"$original\" \"$BIN_AU\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_AU/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_AU/Contents/$INFOPLIST_FILE\"\n\n  # Fix info.plist for AUs built with Xcode 3\n  if [ -f \"$DEVELOPER_DIR/Library/Developer/CoreAudio/AudioUnits/AUPublic/AUBase/AUPlugInDispatch.cpp\" ]; then\n    echo\n  else\n    echo \"Removing AudioComponents entry from Info.plist because this is not a new-format AU\"\n    /usr/libexec/PlistBuddy -c \"Delete AudioComponents\" \"$AU/Contents/Info.plist\"\n  fi\nfi\n\n\nif [ $copyVST -gt 0 ]; then\n  echo \"Copying to VST folder...\"\n  \n  VST=~/Library/Audio/Plug-Ins/VST/$PRODUCT_NAME.vst\n  BIN_VST=../../../Bin/$PRODUCT_NAME.vst\n  \n  if [ -d \"$VST\" ]; then \n    rm -r \"$VST\"\n  fi\n  cp -r \"$original\" \"$VST\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$VST/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$VST/Contents/$INFOPLIST_FILE\"\n\n\n  if [ -d \"$BIN_VST\" ]; then \n    rm -r \"$BIN_VST\"\n  fi  \n  cp -r \"$original\" \"$BIN_VST\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_VST/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_VST/Contents/$INFOPLIST_FILE\"  \nfi\n\nif [ $copyVST3 -gt 0 ]; then\n  echo \"Copying to VST3 folder...\"\n  VST3=~/Library/Audio/Plug-Ins/VST3/$PRODUCT_NAME.vst3\n  BIN_VST3=../../../Bin/$PRODUCT_NAME.vst3\n\n  if [ -d \"$VST3\" ]; then \n    rm -r \"$VST3\"\n  fi\n  cp -r \"$original\" \"$VST3\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$VST3/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$VST3/Contents/$INFOPLIST_FILE\"\n\n  if [ -d \"$BIN_VST3\" ]; then \n    rm -r \"$BIN_VST3\"\n  fi\n  cp -r \"$original\" \"$BIN_VST3\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_VST3/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_VST3/Contents/$INFOPLIST_FILE\"\nfi\n\nif [ $copyRTAS -gt 0 ]; then\n  echo \"Copying to RTAS folder...\"\n\n  if [ -d \"/Library/Application\\ Support/Digidesign/Plug-Ins\"]; then\n  RTAS=/Library/Application\\ Support/Digidesign/Plug-Ins/$PRODUCT_NAME.dpm  \n  BIN_RTAS=../../../Bin/$PRODUCT_NAME.dpm\n  else\n  RTAS=/Library/Audio/Plug-Ins/Digidesign/$PRODUCT_NAME.dpm  \n  BIN_RTAS=../../../Bin/$PRODUCT_NAME.dpm\n  fi\n  \n  if [ -d \"$RTAS\" ]; then\n    rm -r \"$RTAS\"\n  fi\n  \n  #This doesn't copy over properly! \n  #cp -r \"$original\" \"$RTAS\"\n  \n  if [ -d \"$BIN_RTAS\" ]; then\n    rm -r \"$BIN_RTAS\"\n  fi\n  cp -r \"$original\" \"$BIN_RTAS\"  \n\nfi\n\nif [ $copyAAX -gt 0 ]; then\n  echo \"Copying to AAX folder...\"\n\n  if [ -d \"/Applications/ProTools_3PDev/Plug-Ins\" ]; then\n    AAX1=\"/Applications/ProTools_3PDev/Plug-Ins/$PRODUCT_NAME.aaxplugin\"\n    BIN_AAX1=\"../../../Bin/$PRODUCT_NAME.aaxplugin\"\n\n    if [ -d \"$AAX1\" ]; then\n      rm -r \"$AAX1\"\n    fi\n    if [ -d \"$BIN_AAX1\" ]; then\n      rm -r \"$BIN_AAX1\"\n    fi\n\n    cp -r \"$original\" \"$AAX1\"\n    cp -r \"$original\" \"$BIN_AAX1\"\n  fi\n\n\n  if [ -d \"/Library/Application Support/Avid/Audio/Plug-Ins\" ]; then\n    AAX2=\"/Library/Application Support/Avid/Audio/Plug-Ins/$PRODUCT_NAME.aaxplugin\"\n    BIN_AAX2=\"../../../Bin/$PRODUCT_NAME.aaxplugin\"\n\n    if [ -d \"$AAX2\" ]; then\n      rm -r \"$AAX2\"\n    fi\n    cp -r \"$original\" \"$AAX2\"\n    \n    if [ -d \"$BIN_AAX2\" ]; then\n      rm -r \"$BIN_AAX2\"\n    fi\n    cp -r \"$original\" \"$BIN_AAX2\"\n\n  fi\nfi\n";
		};
		DFE4CC508342DE3F79E2E7BE /* Post-build script */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			name = "Post-build script";
			alwaysOutOfDate = 1;
			shellPath = /bin/sh;
			shellScript = "\n# This script takes the build product and copies it to the AU, VST, VST3, RTAS and AAX folders, depending on \n# which plugin types you've built\n\noriginal=$CONFIGURATION_BUILD_DIR/$FULL_PRODUCT_NAME\n\n# this looks inside the binary to detect which platforms are needed.. \ncopyAU=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'AudioUnit' | wc -l`\ncopyVST=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'VSTPlugin' | wc -l`\ncopyVST3=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'GetPluginFactory' | wc -l`\ncopyRTAS=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'CProcess' | wc -l`\ncopyAAX=`nm -g \"$CONFIGURATION_BUILD_DIR/$EXECUTABLE_PATH\" | grep -i 'ACFStartup' | wc -l`\n\nif [ $copyAU -gt 0 ]; then\n  echo \"Copying to AudioUnit folder...\"\n  \n  AU=~/Library/Audio/Plug-Ins/Components/$PRODUCT_NAME.component\n  BIN_AU=../../../Bin/$PRODUCT_NAME.component\n  if [ -d \"$AU\" ]; then \n    rm -r \"$AU\"\n  fi\n  cp -r \"$original\" \"$AU\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$AU/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$AU/Contents/$INFOPLIST_FILE\"\n\n  if [ -d \"$BIN_AU\" ]; then \n    rm -r \"$BIN_AU\"\n  fi\n  cp -r \"$original\" \"$BIN_AU\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_AU/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_AU/Contents/$INFOPLIST_FILE\"\n\n  # Fix info.plist for AUs built with Xcode 3\n  if [ -f \"$DEVELOPER_DIR/Library/Developer/CoreAudio/AudioUnits/AUPublic/AUBase/AUPlugInDispatch.cpp\" ]; then\n    echo\n  else\n    echo \"Removing AudioComponents entry from Info.plist because this is not a new-format AU\"\n    /usr/libexec/PlistBuddy -c \"Delete AudioComponents\" \"$AU/Contents/Info.plist\"\n  fi\nfi\n\n\nif [ $copyVST -gt 0 ]; then\n  echo \"Copying to VST folder...\"\n  \n  VST=~/Library/Audio/Plug-Ins/VST/$PRODUCT_NAME.vst\n  BIN_VST=../../../Bin/$PRODUCT_NAME.vst\n  \n  if [ -d \"$VST\" ]; then \n    rm -r \"$VST\"\n  fi\n  cp -r \"$original\" \"$VST\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$VST/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$VST/Contents/$INFOPLIST_FILE\"\n\n\n  if [ -d \"$BIN_VST\" ]; then \n    rm -r \"$BIN_VST\"\n  fi  \n  cp -r \"$original\" \"$BIN_VST\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_VST/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_VST/Contents/$INFOPLIST_FILE\"  \nfi\n\nif [ $copyVST3 -gt 0 ]; then\n  echo \"Copying to VST3 folder...\"\n  VST3=~/Library/Audio/Plug-Ins/VST3/$PRODUCT_NAME.vst3\n  BIN_VST3=../../../Bin/$PRODUCT_NAME.vst3\n\n  if [ -d \"$VST3\" ]; then \n    rm -r \"$VST3\"\n  fi\n  cp -r \"$original\" \"$VST3\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$VST3/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$VST3/Contents/$INFOPLIST_FILE\"\n\n  if [ -d \"$BIN_VST3\" ]; then \n    rm -r \"$BIN_VST3\"\n  fi\n  cp -r \"$original\" \"$BIN_VST3\"\n  sed -i \"\" -e 's/TDMwPTul/BNDLPTul/g' \"$BIN_VST3/Contents/PkgInfo\"\n  sed -i \"\" -e 's/TDMw/BNDL/g' \"$BIN_VST3/Contents/$INFOPLIST_FILE\"\nfi\n\nif [ $copyRTAS -gt 0 ]; then\n  echo \"Copying to RTAS folder...\"\n\n  if [ -d \"/Library/Application\\ Support/Digidesign/Plug-Ins\"]; then\n  RTAS=/Library/Application\\ Support/Digidesign/Plug-Ins/$PRODUCT_NAME.dpm  \n  BIN_RTAS=../../../Bin/$PRODUCT_NAME.dpm\n  else\n  RTAS=/Library/Audio/Plug-Ins/Digidesign/$PRODUCT_NAME.dpm  \n  BIN_RTAS=../../../Bin/$PRODUCT_NAME.dpm\n  fi\n  \n  if [ -d \"$RTAS\" ]; then\n    rm -r \"$RTAS\"\n  fi\n  \n  #This doesn't copy over properly! \n  #cp -r \"$original\" \"$RTAS\"\n  \n  if [ -d \"$BIN_RTAS\" ]; then\n    rm -r \"$BIN_RTAS\"\n  fi\n  cp -r \"$original\" \"$BIN_RTAS\"  \n\nfi\n\nif [ $copyAAX -gt 0 ]; then\n  echo \"Copying to AAX folder...\"\n\n  if [ -d \"/Applications/ProTools_3PDev/Plug-Ins\" ]; then\n    AAX1=\"/Applications/ProTools_3PDev/Plug-Ins/$PRODUCT_NAME.aaxplugin\"\n    BIN_AAX1=\"../../../Bin/$PRODUCT_NAME.aaxplugin\"\n\n    if [ -d \"$AAX1\" ]; then\n      rm -r \"$AAX1\"\n    fi\n    if [ -d \"$BIN_AAX1\" ]; then\n      rm -r \"$BIN_AAX1\"\n    fi\n\n    cp -r \"$original\" \"$AAX1\"\n    cp -r \"$original\" \"$BIN_AAX1\"\n  fi\n\n\n  if [ -d \"/Library/Application Support/Avid/Audio/Plug-Ins\" ]; then\n    AAX2=\"/Library/Application Support/Avid/Audio/Plug-Ins/$PRODUCT_NAME.aaxplugin\"\n    BIN_AAX2=\"../../../Bin/$PRODUCT_NAME.aaxplugin\"\n\n    if [ -d \"$AAX2\" ]; then\n      rm -r \"$AAX2\"\n    fi\n    cp -r \"$original\" \"$AAX2\"\n    \n    if [ -d \"$BIN_AAX2\" ]; then\n      rm -r \"$BIN_AAX2\"\n    fi\n    cp -r \"$original\" \"$BIN_AAX2\"\n\n  fi\nfi\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		01C2B24565B67692EC26C636 = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				24207C3417454646EF98C365,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		347FAA19BF1861CB7A2228B5 = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				EB3E4DBB3B48B34A7943042E,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		53D3FAC0DE0C7091EBAAD634 = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				CD462C54C1A5BB10E716755D,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		78E6E9C0A6A978EBCBC7CD13 = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				909A757FF41A6AB074FE87CE,
				95F5CAD168B6516D04493C37,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		9635F63F813AE098AFEF9003 = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				CEDF63AEABE1DC1996C3E592,
				0E1748E2D69350633388A0EA,
				3CA0B73C5B1A84946FECE9F3,
				09CAE28964193F7A101E7606,
				781585B98E15F9D809F209E8,
				9F0AD79CB51D03DE11E73AF8,
				168129ECAC49FB8A4CA2068F,
				CC598B9AD8BA4654545C5F25,
				8FCF909A3C4753CD6E18E557,
				7B211B3BC750D7B990A102C1,
				ACE47A3F89D8B23F01740306,
				942F5D420498169F8904D8DC,
				48241548CD06CBC64A967B03,
				EF5C1AD57581641EA6A884E7,
				B15EEBE4ECB2BE6827E88AF9,
				39A31DD73DC71BC59F3C8244,
				F5EB399AE5ABCEE21DF98949,
				DFB3FB28744C57CBB0652F3F,
				9ECF597D8C6AF4793D02850F,
				2D3B188DBDACF598EA66464F,
				A8727F585F7FDA0459509F86,
				CA33440D30E38195579D1056,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		076EC2B692F752A495639D8B = {
			isa = PBXTargetDependency;
			target = 06237C21A7AA1A2967CDF7DC;
		};
		4240E6B950EAFB66168A1492 = {
			isa = PBXTargetDependency;
			target = 8463612D29B95A1577538D0A;
		};
		4C030C5087365BD74CED21E7 = {
			isa = PBXTargetDependency;
			target = 8463612D29B95A1577538D0A;
		};
		70C7A1A51FBBCB9972240775 = {
			isa = PBXTargetDependency;
			target = 64FD1E54828824280D02399F;
		};
		738CC27AF86B61F3A2562041 = {
			isa = PBXTargetDependency;
			target = 8463612D29B95A1577538D0A;
		};
		ADF40297BB143EA61E56DFE4 = {
			isa = PBXTargetDependency;
			target = 8463612D29B95A1577538D0A;
		};
		C2BEA24D01C49DA4905683B2 = {
			isa = PBXTargetDependency;
			target = 8463612D29B95A1577538D0A;
		};
		F042590161439111602889CB = {
			isa = PBXTargetDependency;
			target = A9CF4094F370154069DEB8EA;
		};
		F40796E7D707CF152E59D7F3 = {
			isa = PBXTargetDependency;
			target = 855073AD4B6DC2C324F2D08E;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		0178EC5B902905BA3AF11652 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "c++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_LINK_OBJC_RUNTIME = NO;
				CODE_SIGN_IDENTITY = "";
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "$(PROJECT_DIR)/build/$(CONFIGURATION)";
				COPY_PHASE_STRIP = NO;
				DEPLOYMENT_LOCATION = YES;
				DSTROOT = /;
				EXCLUDED_ARCHS = "";
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"_DEBUG=1",
					"DEBUG=1",
					"STRINGISE(x)=#x",
					"IMAGE_DIRECTORY=STRINGISE(/JUCE/)",
					"JUCER_XCODE_MAC_F6D2F4CF=1",
					"JUCE_APP_VERSION=1.32",
					"JUCE_APP_VERSION_HEX=0x12000",
					"JucePlugin_Build_VST=1",
					"JucePlugin_Build_VST3=0",
					"JucePlugin_Build_AU=0",
					"JucePlugin_Build_AUv3=0",
					"JucePlugin_Build_AAX=0",
					"JucePlugin_Build_Standalone=0",
					"JucePlugin_Build_Unity=0",
					"JucePlugin_Build_LV2=0",
				);
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				GENERATE_PKGINFO_FILE = YES;
				HEADER_SEARCH_PATHS = (
					"$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK",
					"$(SRCROOT)/../../JuceLibraryCode",
					"$(HOME)/JUCE/modules",
					"/usr/local/include",
					"$(HOME)/JUCE/modules/juce_audio_plugin_client",
					"$(inherited)",
				);
				INFOPLIST_FILE = Info-VST.plist;
				INFOPLIST_PREPROCESS = NO;
				INSTALL_PATH = "$(HOME)/Library/Audio/Plug-Ins/VST/";
				LIBRARY_SEARCH_PATHS = (
					"$(inherited)",
					"\"/usr/local/lib\"",
				);
				LIBRARY_STYLE = Bundle;
				MACOSX_DEPLOYMENT_TARGET = 10.11;
				MTL_HEADER_SEARCH_PATHS = "$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK $(SRCROOT)/../../JuceLibraryCode $(HOME)/JUCE/modules /usr/local/include $(HOME)/JUCE/modules/juce_audio_plugin_client";
				OTHER_LDFLAGS = "-bundle -lSAFEEqualiser /usr/local/lib/libxtract.a";
				PRODUCT_BUNDLE_IDENTIFIER = com.SAFEProject.SAFEEqualiser;
				PRODUCT_NAME = "SAFEEqualiser";
				USE_HEADERMAP = NO;
				VALIDATE_WORKSPACE_SKIPPED_SDK_FRAMEWORKS = OpenGL;
				VALID_ARCHS = "i386 x86_64 arm64 arm64e";
				WRAPPER_EXTENSION = vst;
			};
			name = Debug;
		};
		20E2AD377F9EA1CC8118CD6D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				MACOSX_DEPLOYMENT_TARGET = 10.11;
				SDKROOT = macosx;
			};
			name = Debug;
		};
		228F1FE168F052A726608BD5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "c++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_LINK_OBJC_RUNTIME = NO;
				CODE_SIGN_IDENTITY = "";
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "$(PROJECT_DIR)/build/$(CONFIGURATION)";
				COPY_PHASE_STRIP = NO;
				DEPLOYMENT_LOCATION = YES;
				DSTROOT = /;
				EXCLUDED_ARCHS = "";
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"_DEBUG=1",
					"DEBUG=1",
					"STRINGISE(x)=#x",
					"IMAGE_DIRECTORY=STRINGISE(/JUCE/)",
					"JUCER_XCODE_MAC_F6D2F4CF=1",
					"JUCE_APP_VERSION=1.32",
					"JUCE_APP_VERSION_HEX=0x12000",
					"JucePlugin_Build_VST=0",
					"JucePlugin_Build_VST3=1",
					"JucePlugin_Build_AU=0",
					"JucePlugin_Build_AUv3=0",
					"JucePlugin_Build_AAX=0",
					"JucePlugin_Build_Standalone=0",
					"JucePlugin_Build_Unity=0",
					"JucePlugin_Build_LV2=0",
				);
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				GENERATE_PKGINFO_FILE = YES;
				HEADER_SEARCH_PATHS = (
					"$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK",
					"$(SRCROOT)/../../JuceLibraryCode",
					"$(HOME)/JUCE/modules",
					"/usr/local/include",
					"$(HOME)/JUCE/modules/juce_audio_plugin_client",
					"$(inherited)",
				);
				INFOPLIST_FILE = Info-VST3.plist;
				INFOPLIST_PREPROCESS = NO;
				INSTALL_PATH = "$(HOME)/Library/Audio/Plug-Ins/VST3/";
				LIBRARY_SEARCH_PATHS = (
					"$(inherited)",
					"\"/usr/local/lib\"",
				);
				LIBRARY_STYLE = Bundle;
				MACOSX_DEPLOYMENT_TARGET = 10.11;
				MTL_HEADER_SEARCH_PATHS = "$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK $(SRCROOT)/../../JuceLibraryCode $(HOME)/JUCE/modules /usr/local/include $(HOME)/JUCE/modules/juce_audio_plugin_client";
				OTHER_LDFLAGS = "-bundle -lSAFEEqualiser /usr/local/lib/libxtract.a";
				PRODUCT_BUNDLE_IDENTIFIER = com.SAFEProject.SAFEEqualiser;
				PRODUCT_NAME = "SAFEEqualiser";
				USE_HEADERMAP = NO;
				VALIDATE_WORKSPACE_SKIPPED_SDK_FRAMEWORKS = OpenGL;
				VALID_ARCHS = "i386 x86_64 arm64 arm64e";
				WRAPPER_EXTENSION = vst3;
			};
			name = Debug;
		};
		784FE02836D316AB97ECD885 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				MACOSX_DEPLOYMENT_TARGET = 10.6;
				SDKROOT = macosx;
			};
			name = Release;
		};
		813ECB6347D37471204D9847 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_32_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "c++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_LINK_OBJC_RUNTIME = NO;
				CODE_SIGN_IDENTITY = "";
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "$(PROJECT_DIR)/build/$(CONFIGURATION)";
				DEAD_CODE_STRIPPING = YES;
				EXCLUDED_ARCHS = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"_NDEBUG=1",
					"NDEBUG=1",
					"STRINGISE(x)=#x",
					"IMAGE_DIRECTORY=STRINGISE(/JUCE/)",
					"JUCER_XCODE_MAC_F6D2F4CF=1",
					"JUCE_APP_VERSION=1.32",
					"JUCE_APP_VERSION_HEX=0x12000",
					"JucePlugin_Build_VST=1",
					"JucePlugin_Build_VST3=1",
					"JucePlugin_Build_AU=1",
					"JucePlugin_Build_AUv3=0",
					"JucePlugin_Build_AAX=0",
					"JucePlugin_Build_Standalone=1",
					"JucePlugin_Build_Unity=0",
					"JucePlugin_Build_LV2=0",
					"JUCE_SHARED_CODE=1",
				);
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				HEADER_SEARCH_PATHS = (
					"$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK",
					"$(SRCROOT)/../../JuceLibraryCode",
					"$(HOME)/JUCE/modules",
					"/usr/local/include",
					"$(HOME)/JUCE/modules/juce_audio_plugin_client",
					"$(inherited)",
				);
				INSTALL_PATH = "@executable_path/../Frameworks";
				LIBRARY_SEARCH_PATHS = (
					"$(inherited)",
					"\"/usr/local/lib\"",
				);
				LLVM_LTO = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.6;
				MTL_HEADER_SEARCH_PATHS = "$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK $(SRCROOT)/../../JuceLibraryCode $(HOME)/JUCE/modules /usr/local/include $(HOME)/JUCE/modules/juce_audio_plugin_client";
				OTHER_LDFLAGS = "/usr/local/lib/libxtract.a";
				PRODUCT_BUNDLE_IDENTIFIER = com.SAFEProject.SAFEEqualiser;
				PRODUCT_NAME = "SAFEEqualiser";
				SKIP_INSTALL = YES;
				USE_HEADERMAP = NO;
				VALIDATE_WORKSPACE_SKIPPED_SDK_FRAMEWORKS = OpenGL;
				VALID_ARCHS = "i386 x86_64 arm64 arm64e";
			};
			name = Release;
		};
		826A87949E91021532AFB9B8 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_32_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "c++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_LINK_OBJC_RUNTIME = NO;
				CODE_SIGN_IDENTITY = "";
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "$(PROJECT_DIR)/build/$(CONFIGURATION)";
				DEAD_CODE_STRIPPING = YES;
				DEPLOYMENT_LOCATION = YES;
				DSTROOT = /;
				EXCLUDED_ARCHS = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"_NDEBUG=1",
					"NDEBUG=1",
					"STRINGISE(x)=#x",
					"IMAGE_DIRECTORY=STRINGISE(/JUCE/)",
					"JUCER_XCODE_MAC_F6D2F4CF=1",
					"JUCE_APP_VERSION=1.32",
					"JUCE_APP_VERSION_HEX=0x12000",
					"JucePlugin_Build_VST=0",
					"JucePlugin_Build_VST3=1",
					"JucePlugin_Build_AU=0",
					"JucePlugin_Build_AUv3=0",
					"JucePlugin_Build_AAX=0",
					"JucePlugin_Build_Standalone=0",
					"JucePlugin_Build_Unity=0",
					"JucePlugin_Build_LV2=0",
				);
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				GENERATE_PKGINFO_FILE = YES;
				HEADER_SEARCH_PATHS = (
					"$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK",
					"$(SRCROOT)/../../JuceLibraryCode",
					"$(HOME)/JUCE/modules",
					"/usr/local/include",
					"$(HOME)/JUCE/modules/juce_audio_plugin_client",
					"$(inherited)",
				);
				INFOPLIST_FILE = Info-VST3.plist;
				INFOPLIST_PREPROCESS = NO;
				INSTALL_PATH = "$(HOME)/Library/Audio/Plug-Ins/VST3/";
				LIBRARY_SEARCH_PATHS = (
					"$(inherited)",
					"\"/usr/local/lib\"",
				);
				LIBRARY_STYLE = Bundle;
				LLVM_LTO = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.6;
				MTL_HEADER_SEARCH_PATHS = "$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK $(SRCROOT)/../../JuceLibraryCode $(HOME)/JUCE/modules /usr/local/include $(HOME)/JUCE/modules/juce_audio_plugin_client";
				OTHER_LDFLAGS = "-bundle -lSAFEEqualiser /usr/local/lib/libxtract.a";
				PRODUCT_BUNDLE_IDENTIFIER = com.SAFEProject.SAFEEqualiser;
				PRODUCT_NAME = "SAFEEqualiser";
				USE_HEADERMAP = NO;
				VALIDATE_WORKSPACE_SKIPPED_SDK_FRAMEWORKS = OpenGL;
				VALID_ARCHS = "i386 x86_64 arm64 arm64e";
				WRAPPER_EXTENSION = vst3;
			};
			name = Release;
		};
		9B66D5A13C6CEC9A4B7B362C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "c++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_LINK_OBJC_RUNTIME = NO;
				CODE_SIGN_IDENTITY = "";
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "$(PROJECT_DIR)/build/$(CONFIGURATION)";
				COPY_PHASE_STRIP = NO;
				DEPLOYMENT_LOCATION = YES;
				DSTROOT = /;
				EXCLUDED_ARCHS = "";
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"_DEBUG=1",
					"DEBUG=1",
					"STRINGISE(x)=#x",
					"IMAGE_DIRECTORY=STRINGISE(/JUCE/)",
					"JUCER_XCODE_MAC_F6D2F4CF=1",
					"JUCE_APP_VERSION=1.32",
					"JUCE_APP_VERSION_HEX=0x12000",
					"JucePlugin_Build_VST=0",
					"JucePlugin_Build_VST3=0",
					"JucePlugin_Build_AU=1",
					"JucePlugin_Build_AUv3=0",
					"JucePlugin_Build_AAX=0",
					"JucePlugin_Build_Standalone=0",
					"JucePlugin_Build_Unity=0",
					"JucePlugin_Build_LV2=0",
				);
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				GENERATE_PKGINFO_FILE = YES;
				HEADER_SEARCH_PATHS = (
					"$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK",
					"$(SRCROOT)/../../JuceLibraryCode",
					"$(HOME)/JUCE/modules",
					"/usr/local/include",
					"$(HOME)/JUCE/modules/juce_audio_plugin_client",
					"$(inherited)",
				);
				INFOPLIST_FILE = Info-AU.plist;
				INFOPLIST_PREPROCESS = NO;
				INSTALL_PATH = "$(HOME)/Library/Audio/Plug-Ins/Components/";
				LIBRARY_SEARCH_PATHS = (
					"$(inherited)",
					"\"/usr/local/lib\"",
				);
				LIBRARY_STYLE = Bundle;
				MACOSX_DEPLOYMENT_TARGET = 10.11;
				MTL_HEADER_SEARCH_PATHS = "$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK $(SRCROOT)/../../JuceLibraryCode $(HOME)/JUCE/modules /usr/local/include $(HOME)/JUCE/modules/juce_audio_plugin_client";
				OTHER_LDFLAGS = "-bundle -lSAFEEqualiser /usr/local/lib/libxtract.a";
				OTHER_REZFLAGS = "-d ppc_$ppc -d i386_$i386 -d ppc64_$ppc64 -d x86_64_$x86_64 -d arm64_$arm64 -I /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Versions/A/Headers -I \"$(DEVELOPER_DIR)/Extras/CoreAudio/AudioUnits/AUPublic/AUBase\" -I \"$(DEVELOPER_DIR)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/AudioUnit.framework/Headers\"";
				PRODUCT_BUNDLE_IDENTIFIER = com.SAFEProject.SAFEEqualiser;
				PRODUCT_NAME = "SAFEEqualiser";
				USE_HEADERMAP = NO;
				VALIDATE_WORKSPACE_SKIPPED_SDK_FRAMEWORKS = OpenGL;
				VALID_ARCHS = "i386 x86_64 arm64 arm64e";
				WRAPPER_EXTENSION = component;
			};
			name = Debug;
		};
		A44DE3612EC89AF9443AEA7D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "c++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_LINK_OBJC_RUNTIME = NO;
				CODE_SIGN_IDENTITY = "";
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "$(PROJECT_DIR)/build/$(CONFIGURATION)";
				COPY_PHASE_STRIP = NO;
				EXCLUDED_ARCHS = "";
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"_DEBUG=1",
					"DEBUG=1",
					"STRINGISE(x)=#x",
					"IMAGE_DIRECTORY=STRINGISE(/JUCE/)",
					"JUCER_XCODE_MAC_F6D2F4CF=1",
					"JUCE_APP_VERSION=1.32",
					"JUCE_APP_VERSION_HEX=0x12000",
					"JucePlugin_Build_VST=1",
					"JucePlugin_Build_VST3=1",
					"JucePlugin_Build_AU=1",
					"JucePlugin_Build_AUv3=0",
					"JucePlugin_Build_AAX=0",
					"JucePlugin_Build_Standalone=1",
					"JucePlugin_Build_Unity=0",
					"JucePlugin_Build_LV2=0",
					"JUCE_SHARED_CODE=1",
				);
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				HEADER_SEARCH_PATHS = (
					"$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK",
					"$(SRCROOT)/../../JuceLibraryCode",
					"$(HOME)/JUCE/modules",
					"/usr/local/include",
					"$(HOME)/JUCE/modules/juce_audio_plugin_client",
					"$(inherited)",
				);
				INSTALL_PATH = "@executable_path/../Frameworks";
				LIBRARY_SEARCH_PATHS = (
					"$(inherited)",
					"\"/usr/local/lib\"",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.11;
				MTL_HEADER_SEARCH_PATHS = "$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK $(SRCROOT)/../../JuceLibraryCode $(HOME)/JUCE/modules /usr/local/include $(HOME)/JUCE/modules/juce_audio_plugin_client";
				OTHER_LDFLAGS = "/usr/local/lib/libxtract.a";
				PRODUCT_BUNDLE_IDENTIFIER = com.SAFEProject.SAFEEqualiser;
				PRODUCT_NAME = "SAFEEqualiser";
				SKIP_INSTALL = YES;
				USE_HEADERMAP = NO;
				VALIDATE_WORKSPACE_SKIPPED_SDK_FRAMEWORKS = OpenGL;
				VALID_ARCHS = "i386 x86_64 arm64 arm64e";
			};
			name = Debug;
		};
		A5D20EAC330DF234677AD267 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "c++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_LINK_OBJC_RUNTIME = NO;
				CODE_SIGN_IDENTITY = "";
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "$(PROJECT_DIR)/build/$(CONFIGURATION)";
				COPY_PHASE_STRIP = NO;
				EXCLUDED_ARCHS = "";
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"_DEBUG=1",
					"DEBUG=1",
					"STRINGISE(x)=#x",
					"IMAGE_DIRECTORY=STRINGISE(/JUCE/)",
					"JUCER_XCODE_MAC_F6D2F4CF=1",
					"JUCE_APP_VERSION=1.32",
					"JUCE_APP_VERSION_HEX=0x12000",
					"JucePlugin_Build_VST=0",
					"JucePlugin_Build_VST3=0",
					"JucePlugin_Build_AU=0",
					"JucePlugin_Build_AUv3=0",
					"JucePlugin_Build_AAX=0",
					"JucePlugin_Build_Standalone=1",
					"JucePlugin_Build_Unity=0",
					"JucePlugin_Build_LV2=0",
				);
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				HEADER_SEARCH_PATHS = (
					"$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK",
					"$(SRCROOT)/../../JuceLibraryCode",
					"$(HOME)/JUCE/modules",
					"/usr/local/include",
					"$(HOME)/JUCE/modules/juce_audio_plugin_client",
					"$(inherited)",
				);
				INFOPLIST_FILE = Info-Standalone_Plugin.plist;
				INFOPLIST_PREPROCESS = NO;
				LIBRARY_SEARCH_PATHS = (
					"$(inherited)",
					"\"/usr/local/lib\"",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.11;
				MTL_HEADER_SEARCH_PATHS = "$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK $(SRCROOT)/../../JuceLibraryCode $(HOME)/JUCE/modules /usr/local/include $(HOME)/JUCE/modules/juce_audio_plugin_client";
				OTHER_LDFLAGS = "-lSAFEEqualiser /usr/local/lib/libxtract.a";
				PRODUCT_BUNDLE_IDENTIFIER = com.SAFEProject.SAFEEqualiser;
				PRODUCT_NAME = "SAFEEqualiser";
				USE_HEADERMAP = NO;
				VALIDATE_WORKSPACE_SKIPPED_SDK_FRAMEWORKS = OpenGL;
				VALID_ARCHS = "i386 x86_64 arm64 arm64e";
			};
			name = Debug;
		};
		D136090FFE838D14DB69A92A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGN_IDENTITY = "";
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = NO;
				GCC_C_LANGUAGE_STANDARD = c11;
				GCC_INLINES_ARE_PRIVATE_EXTERN = YES;
				GCC_MODEL_TUNING = G5;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_SYMBOLS_PRIVATE_EXTERN = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_CHECK_SWITCH_STATEMENTS = YES;
				GCC_WARN_MISSING_PARENTHESES = YES;
				GCC_WARN_NON_VIRTUAL_DESTRUCTOR = YES;
				GCC_WARN_TYPECHECK_CALLS_TO_PRINTF = YES;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				PRODUCT_NAME = "SAFEEqualiser";
				SDKROOT = macosx;
				WARNING_CFLAGS = "-Wreorder";
				ZERO_LINK = NO;
			};
			name = Release;
		};
		DDFBA13F2CA5DEBBC4DD669F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_32_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "c++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_LINK_OBJC_RUNTIME = NO;
				CODE_SIGN_IDENTITY = "";
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "$(PROJECT_DIR)/build/$(CONFIGURATION)";
				DEAD_CODE_STRIPPING = YES;
				EXCLUDED_ARCHS = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"_NDEBUG=1",
					"NDEBUG=1",
					"STRINGISE(x)=#x",
					"IMAGE_DIRECTORY=STRINGISE(/JUCE/)",
					"JUCER_XCODE_MAC_F6D2F4CF=1",
					"JUCE_APP_VERSION=1.32",
					"JUCE_APP_VERSION_HEX=0x12000",
					"JucePlugin_Build_VST=0",
					"JucePlugin_Build_VST3=0",
					"JucePlugin_Build_AU=0",
					"JucePlugin_Build_AUv3=0",
					"JucePlugin_Build_AAX=0",
					"JucePlugin_Build_Standalone=1",
					"JucePlugin_Build_Unity=0",
					"JucePlugin_Build_LV2=0",
				);
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				HEADER_SEARCH_PATHS = (
					"$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK",
					"$(SRCROOT)/../../JuceLibraryCode",
					"$(HOME)/JUCE/modules",
					"/usr/local/include",
					"$(HOME)/JUCE/modules/juce_audio_plugin_client",
					"$(inherited)",
				);
				INFOPLIST_FILE = Info-Standalone_Plugin.plist;
				INFOPLIST_PREPROCESS = NO;
				LIBRARY_SEARCH_PATHS = (
					"$(inherited)",
					"\"/usr/local/lib\"",
				);
				LLVM_LTO = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.6;
				MTL_HEADER_SEARCH_PATHS = "$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK $(SRCROOT)/../../JuceLibraryCode $(HOME)/JUCE/modules /usr/local/include $(HOME)/JUCE/modules/juce_audio_plugin_client";
				OTHER_LDFLAGS = "-lSAFEEqualiser /usr/local/lib/libxtract.a";
				PRODUCT_BUNDLE_IDENTIFIER = com.SAFEProject.SAFEEqualiser;
				PRODUCT_NAME = "SAFEEqualiser";
				USE_HEADERMAP = NO;
				VALIDATE_WORKSPACE_SKIPPED_SDK_FRAMEWORKS = OpenGL;
				VALID_ARCHS = "i386 x86_64 arm64 arm64e";
			};
			name = Release;
		};
		EAC8C7087D21A5141A94B015 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_32_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "c++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_LINK_OBJC_RUNTIME = NO;
				CODE_SIGN_IDENTITY = "";
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "$(PROJECT_DIR)/build/$(CONFIGURATION)";
				DEAD_CODE_STRIPPING = YES;
				DEPLOYMENT_LOCATION = YES;
				DSTROOT = /;
				EXCLUDED_ARCHS = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"_NDEBUG=1",
					"NDEBUG=1",
					"STRINGISE(x)=#x",
					"IMAGE_DIRECTORY=STRINGISE(/JUCE/)",
					"JUCER_XCODE_MAC_F6D2F4CF=1",
					"JUCE_APP_VERSION=1.32",
					"JUCE_APP_VERSION_HEX=0x12000",
					"JucePlugin_Build_VST=1",
					"JucePlugin_Build_VST3=0",
					"JucePlugin_Build_AU=0",
					"JucePlugin_Build_AUv3=0",
					"JucePlugin_Build_AAX=0",
					"JucePlugin_Build_Standalone=0",
					"JucePlugin_Build_Unity=0",
					"JucePlugin_Build_LV2=0",
				);
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				GENERATE_PKGINFO_FILE = YES;
				HEADER_SEARCH_PATHS = (
					"$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK",
					"$(SRCROOT)/../../JuceLibraryCode",
					"$(HOME)/JUCE/modules",
					"/usr/local/include",
					"$(HOME)/JUCE/modules/juce_audio_plugin_client",
					"$(inherited)",
				);
				INFOPLIST_FILE = Info-VST.plist;
				INFOPLIST_PREPROCESS = NO;
				INSTALL_PATH = "$(HOME)/Library/Audio/Plug-Ins/VST/";
				LIBRARY_SEARCH_PATHS = (
					"$(inherited)",
					"\"/usr/local/lib\"",
				);
				LIBRARY_STYLE = Bundle;
				LLVM_LTO = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.6;
				MTL_HEADER_SEARCH_PATHS = "$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK $(SRCROOT)/../../JuceLibraryCode $(HOME)/JUCE/modules /usr/local/include $(HOME)/JUCE/modules/juce_audio_plugin_client";
				OTHER_LDFLAGS = "-bundle -lSAFEEqualiser /usr/local/lib/libxtract.a";
				PRODUCT_BUNDLE_IDENTIFIER = com.SAFEProject.SAFEEqualiser;
				PRODUCT_NAME = "SAFEEqualiser";
				USE_HEADERMAP = NO;
				VALIDATE_WORKSPACE_SKIPPED_SDK_FRAMEWORKS = OpenGL;
				VALID_ARCHS = "i386 x86_64 arm64 arm64e";
				WRAPPER_EXTENSION = vst;
			};
			name = Release;
		};
		EDA530D637D0BCEBC7099250 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGN_IDENTITY = "";
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = NO;
				GCC_C_LANGUAGE_STANDARD = c11;
				GCC_INLINES_ARE_PRIVATE_EXTERN = YES;
				GCC_MODEL_TUNING = G5;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_SYMBOLS_PRIVATE_EXTERN = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_CHECK_SWITCH_STATEMENTS = YES;
				GCC_WARN_MISSING_PARENTHESES = YES;
				GCC_WARN_NON_VIRTUAL_DESTRUCTOR = YES;
				GCC_WARN_TYPECHECK_CALLS_TO_PRINTF = YES;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				PRODUCT_NAME = "SAFEEqualiser";
				SDKROOT = macosx;
				WARNING_CFLAGS = "-Wreorder";
				ZERO_LINK = NO;
			};
			name = Debug;
		};
		F5615B22F1E9303F576A1E0D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_32_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "c++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_LINK_OBJC_RUNTIME = NO;
				CODE_SIGN_IDENTITY = "";
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "$(PROJECT_DIR)/build/$(CONFIGURATION)";
				DEAD_CODE_STRIPPING = YES;
				DEPLOYMENT_LOCATION = YES;
				DSTROOT = /;
				EXCLUDED_ARCHS = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"_NDEBUG=1",
					"NDEBUG=1",
					"STRINGISE(x)=#x",
					"IMAGE_DIRECTORY=STRINGISE(/JUCE/)",
					"JUCER_XCODE_MAC_F6D2F4CF=1",
					"JUCE_APP_VERSION=1.32",
					"JUCE_APP_VERSION_HEX=0x12000",
					"JucePlugin_Build_VST=0",
					"JucePlugin_Build_VST3=0",
					"JucePlugin_Build_AU=1",
					"JucePlugin_Build_AUv3=0",
					"JucePlugin_Build_AAX=0",
					"JucePlugin_Build_Standalone=0",
					"JucePlugin_Build_Unity=0",
					"JucePlugin_Build_LV2=0",
				);
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				GENERATE_PKGINFO_FILE = YES;
				HEADER_SEARCH_PATHS = (
					"$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK",
					"$(SRCROOT)/../../JuceLibraryCode",
					"$(HOME)/JUCE/modules",
					"/usr/local/include",
					"$(HOME)/JUCE/modules/juce_audio_plugin_client",
					"$(inherited)",
				);
				INFOPLIST_FILE = Info-AU.plist;
				INFOPLIST_PREPROCESS = NO;
				INSTALL_PATH = "$(HOME)/Library/Audio/Plug-Ins/Components/";
				LIBRARY_SEARCH_PATHS = (
					"$(inherited)",
					"\"/usr/local/lib\"",
				);
				LIBRARY_STYLE = Bundle;
				LLVM_LTO = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.6;
				MTL_HEADER_SEARCH_PATHS = "$(HOME)/JUCE/modules/juce_audio_processors/format_types/VST3_SDK $(SRCROOT)/../../JuceLibraryCode $(HOME)/JUCE/modules /usr/local/include $(HOME)/JUCE/modules/juce_audio_plugin_client";
				OTHER_LDFLAGS = "-bundle -lSAFEEqualiser /usr/local/lib/libxtract.a";
				OTHER_REZFLAGS = "-d ppc_$ppc -d i386_$i386 -d ppc64_$ppc64 -d x86_64_$x86_64 -d arm64_$arm64 -I /System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Versions/A/Headers -I \"$(DEVELOPER_DIR)/Extras/CoreAudio/AudioUnits/AUPublic/AUBase\" -I \"$(DEVELOPER_DIR)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/AudioUnit.framework/Headers\"";
				PRODUCT_BUNDLE_IDENTIFIER = com.SAFEProject.SAFEEqualiser;
				PRODUCT_NAME = "SAFEEqualiser";
				USE_HEADERMAP = NO;
				VALIDATE_WORKSPACE_SKIPPED_SDK_FRAMEWORKS = OpenGL;
				VALID_ARCHS = "i386 x86_64 arm64 arm64e";
				WRAPPER_EXTENSION = component;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		32C8C7311E341A1E14555347 = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A5D20EAC330DF234677AD267,
				DDFBA13F2CA5DEBBC4DD669F,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		4128B3BB1B7332D074484CFF = {
			isa = XCConfigurationList;
			buildConfigurations = (
				9B66D5A13C6CEC9A4B7B362C,
				F5615B22F1E9303F576A1E0D,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		477E3F0309B18A30D1C88F2C = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0178EC5B902905BA3AF11652,
				EAC8C7087D21A5141A94B015,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		6C0DD00AE05998B735BA5BD5 = {
			isa = XCConfigurationList;
			buildConfigurations = (
				228F1FE168F052A726608BD5,
				826A87949E91021532AFB9B8,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		762A174DB5CA736D34F9ED6C = {
			isa = XCConfigurationList;
			buildConfigurations = (
				20E2AD377F9EA1CC8118CD6D,
				784FE02836D316AB97ECD885,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C455BA805B81F53288E730E3 = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D136090FFE838D14DB69A92A,
				EDA530D637D0BCEBC7099250,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		F4B65DBCBA68762FAF69582A = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A44DE3612EC89AF9443AEA7D,
				813ECB6347D37471204D9847,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = 5253E4E73AF4BD1130F33B06 /* Project object */;
}
